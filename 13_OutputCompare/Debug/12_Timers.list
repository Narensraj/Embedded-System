
12_Timers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001444  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b0  080015e4  080015e4  000115e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001694  08001694  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001694  08001694  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001694  08001694  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001694  08001694  00011694  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001698  08001698  00011698  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  0800169c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001700  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001700  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   000015f6  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000005a4  00000000  00000000  0002168a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000180  00000000  00000000  00021c30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000128  00000000  00000000  00021db0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000210f  00000000  00000000  00021ed8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001ffc  00000000  00000000  00023fe7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00055394  00000000  00000000  00025fe3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0007b377  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c70  00000000  00000000  0007b3c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080015cc 	.word	0x080015cc

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	080015cc 	.word	0x080015cc

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
#define GPIOAEN 			(1U<<0) //GPIOA 0 register is set to 1
#define PIN5 				(1U<<5) //GPIOA pin 5 is set
#define LED_PIN				PIN5	//Defined pin 5 as led pin

int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOAEN; 		//Clock is enabled for GPIOA
 8000284:	4b17      	ldr	r3, [pc, #92]	; (80002e4 <main+0x64>)
 8000286:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000288:	4a16      	ldr	r2, [pc, #88]	; (80002e4 <main+0x64>)
 800028a:	f043 0301 	orr.w	r3, r3, #1
 800028e:	6313      	str	r3, [r2, #48]	; 0x30

	/*To set the gpioa pin 5 as output*/
	GPIOA->MODER |= (1U<<10);
 8000290:	4b15      	ldr	r3, [pc, #84]	; (80002e8 <main+0x68>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	4a14      	ldr	r2, [pc, #80]	; (80002e8 <main+0x68>)
 8000296:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800029a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~(1U<<11);
 800029c:	4b12      	ldr	r3, [pc, #72]	; (80002e8 <main+0x68>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	4a11      	ldr	r2, [pc, #68]	; (80002e8 <main+0x68>)
 80002a2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80002a6:	6013      	str	r3, [r2, #0]

	uart_rxtx_init();								//UART transceiver initialization
 80002a8:	f000 f936 	bl	8000518 <uart_rxtx_init>
	tim2_1hz_init();
 80002ac:	f000 f8c4 	bl	8000438 <tim2_1hz_init>

	while(1)
	{
		while(!(TIM2->SR & SR_UIF));
 80002b0:	bf00      	nop
 80002b2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80002b6:	691b      	ldr	r3, [r3, #16]
 80002b8:	f003 0301 	and.w	r3, r3, #1
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d0f8      	beq.n	80002b2 <main+0x32>

		TIM2->SR &=~ SR_UIF;
 80002c0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80002c4:	691b      	ldr	r3, [r3, #16]
 80002c6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 80002ca:	f023 0301 	bic.w	r3, r3, #1
 80002ce:	6113      	str	r3, [r2, #16]

		printf("A second is passed!\n\r");
 80002d0:	4806      	ldr	r0, [pc, #24]	; (80002ec <main+0x6c>)
 80002d2:	f000 f9ed 	bl	80006b0 <iprintf>
		GPIOA->ODR ^= LED_PIN;
 80002d6:	4b04      	ldr	r3, [pc, #16]	; (80002e8 <main+0x68>)
 80002d8:	695b      	ldr	r3, [r3, #20]
 80002da:	4a03      	ldr	r2, [pc, #12]	; (80002e8 <main+0x68>)
 80002dc:	f083 0320 	eor.w	r3, r3, #32
 80002e0:	6153      	str	r3, [r2, #20]
		while(!(TIM2->SR & SR_UIF));
 80002e2:	e7e5      	b.n	80002b0 <main+0x30>
 80002e4:	40023800 	.word	0x40023800
 80002e8:	40020000 	.word	0x40020000
 80002ec:	080015e4 	.word	0x080015e4

080002f0 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002f0:	b580      	push	{r7, lr}
 80002f2:	b086      	sub	sp, #24
 80002f4:	af00      	add	r7, sp, #0
 80002f6:	60f8      	str	r0, [r7, #12]
 80002f8:	60b9      	str	r1, [r7, #8]
 80002fa:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002fc:	2300      	movs	r3, #0
 80002fe:	617b      	str	r3, [r7, #20]
 8000300:	e00a      	b.n	8000318 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000302:	f3af 8000 	nop.w
 8000306:	4601      	mov	r1, r0
 8000308:	68bb      	ldr	r3, [r7, #8]
 800030a:	1c5a      	adds	r2, r3, #1
 800030c:	60ba      	str	r2, [r7, #8]
 800030e:	b2ca      	uxtb	r2, r1
 8000310:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000312:	697b      	ldr	r3, [r7, #20]
 8000314:	3301      	adds	r3, #1
 8000316:	617b      	str	r3, [r7, #20]
 8000318:	697a      	ldr	r2, [r7, #20]
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	429a      	cmp	r2, r3
 800031e:	dbf0      	blt.n	8000302 <_read+0x12>
	}

return len;
 8000320:	687b      	ldr	r3, [r7, #4]
}
 8000322:	4618      	mov	r0, r3
 8000324:	3718      	adds	r7, #24
 8000326:	46bd      	mov	sp, r7
 8000328:	bd80      	pop	{r7, pc}

0800032a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800032a:	b580      	push	{r7, lr}
 800032c:	b086      	sub	sp, #24
 800032e:	af00      	add	r7, sp, #0
 8000330:	60f8      	str	r0, [r7, #12]
 8000332:	60b9      	str	r1, [r7, #8]
 8000334:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000336:	2300      	movs	r3, #0
 8000338:	617b      	str	r3, [r7, #20]
 800033a:	e009      	b.n	8000350 <_write+0x26>
	{
		__io_putchar(*ptr++);
 800033c:	68bb      	ldr	r3, [r7, #8]
 800033e:	1c5a      	adds	r2, r3, #1
 8000340:	60ba      	str	r2, [r7, #8]
 8000342:	781b      	ldrb	r3, [r3, #0]
 8000344:	4618      	mov	r0, r3
 8000346:	f000 f89d 	bl	8000484 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800034a:	697b      	ldr	r3, [r7, #20]
 800034c:	3301      	adds	r3, #1
 800034e:	617b      	str	r3, [r7, #20]
 8000350:	697a      	ldr	r2, [r7, #20]
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	429a      	cmp	r2, r3
 8000356:	dbf1      	blt.n	800033c <_write+0x12>
	}
	return len;
 8000358:	687b      	ldr	r3, [r7, #4]
}
 800035a:	4618      	mov	r0, r3
 800035c:	3718      	adds	r7, #24
 800035e:	46bd      	mov	sp, r7
 8000360:	bd80      	pop	{r7, pc}

08000362 <_close>:

int _close(int file)
{
 8000362:	b480      	push	{r7}
 8000364:	b083      	sub	sp, #12
 8000366:	af00      	add	r7, sp, #0
 8000368:	6078      	str	r0, [r7, #4]
	return -1;
 800036a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800036e:	4618      	mov	r0, r3
 8000370:	370c      	adds	r7, #12
 8000372:	46bd      	mov	sp, r7
 8000374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000378:	4770      	bx	lr

0800037a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800037a:	b480      	push	{r7}
 800037c:	b083      	sub	sp, #12
 800037e:	af00      	add	r7, sp, #0
 8000380:	6078      	str	r0, [r7, #4]
 8000382:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000384:	683b      	ldr	r3, [r7, #0]
 8000386:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800038a:	605a      	str	r2, [r3, #4]
	return 0;
 800038c:	2300      	movs	r3, #0
}
 800038e:	4618      	mov	r0, r3
 8000390:	370c      	adds	r7, #12
 8000392:	46bd      	mov	sp, r7
 8000394:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000398:	4770      	bx	lr

0800039a <_isatty>:

int _isatty(int file)
{
 800039a:	b480      	push	{r7}
 800039c:	b083      	sub	sp, #12
 800039e:	af00      	add	r7, sp, #0
 80003a0:	6078      	str	r0, [r7, #4]
	return 1;
 80003a2:	2301      	movs	r3, #1
}
 80003a4:	4618      	mov	r0, r3
 80003a6:	370c      	adds	r7, #12
 80003a8:	46bd      	mov	sp, r7
 80003aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003ae:	4770      	bx	lr

080003b0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003b0:	b480      	push	{r7}
 80003b2:	b085      	sub	sp, #20
 80003b4:	af00      	add	r7, sp, #0
 80003b6:	60f8      	str	r0, [r7, #12]
 80003b8:	60b9      	str	r1, [r7, #8]
 80003ba:	607a      	str	r2, [r7, #4]
	return 0;
 80003bc:	2300      	movs	r3, #0
}
 80003be:	4618      	mov	r0, r3
 80003c0:	3714      	adds	r7, #20
 80003c2:	46bd      	mov	sp, r7
 80003c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c8:	4770      	bx	lr
	...

080003cc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80003cc:	b580      	push	{r7, lr}
 80003ce:	b086      	sub	sp, #24
 80003d0:	af00      	add	r7, sp, #0
 80003d2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003d4:	4a14      	ldr	r2, [pc, #80]	; (8000428 <_sbrk+0x5c>)
 80003d6:	4b15      	ldr	r3, [pc, #84]	; (800042c <_sbrk+0x60>)
 80003d8:	1ad3      	subs	r3, r2, r3
 80003da:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003dc:	697b      	ldr	r3, [r7, #20]
 80003de:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003e0:	4b13      	ldr	r3, [pc, #76]	; (8000430 <_sbrk+0x64>)
 80003e2:	681b      	ldr	r3, [r3, #0]
 80003e4:	2b00      	cmp	r3, #0
 80003e6:	d102      	bne.n	80003ee <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003e8:	4b11      	ldr	r3, [pc, #68]	; (8000430 <_sbrk+0x64>)
 80003ea:	4a12      	ldr	r2, [pc, #72]	; (8000434 <_sbrk+0x68>)
 80003ec:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003ee:	4b10      	ldr	r3, [pc, #64]	; (8000430 <_sbrk+0x64>)
 80003f0:	681a      	ldr	r2, [r3, #0]
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	4413      	add	r3, r2
 80003f6:	693a      	ldr	r2, [r7, #16]
 80003f8:	429a      	cmp	r2, r3
 80003fa:	d207      	bcs.n	800040c <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003fc:	f000 f926 	bl	800064c <__errno>
 8000400:	4603      	mov	r3, r0
 8000402:	220c      	movs	r2, #12
 8000404:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000406:	f04f 33ff 	mov.w	r3, #4294967295
 800040a:	e009      	b.n	8000420 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800040c:	4b08      	ldr	r3, [pc, #32]	; (8000430 <_sbrk+0x64>)
 800040e:	681b      	ldr	r3, [r3, #0]
 8000410:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000412:	4b07      	ldr	r3, [pc, #28]	; (8000430 <_sbrk+0x64>)
 8000414:	681a      	ldr	r2, [r3, #0]
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	4413      	add	r3, r2
 800041a:	4a05      	ldr	r2, [pc, #20]	; (8000430 <_sbrk+0x64>)
 800041c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800041e:	68fb      	ldr	r3, [r7, #12]
}
 8000420:	4618      	mov	r0, r3
 8000422:	3718      	adds	r7, #24
 8000424:	46bd      	mov	sp, r7
 8000426:	bd80      	pop	{r7, pc}
 8000428:	20020000 	.word	0x20020000
 800042c:	00000400 	.word	0x00000400
 8000430:	20000080 	.word	0x20000080
 8000434:	20000098 	.word	0x20000098

08000438 <tim2_1hz_init>:

#define TIM2_EN		(1U<<0)


void tim2_1hz_init(void)
{
 8000438:	b480      	push	{r7}
 800043a:	af00      	add	r7, sp, #0
	/*Enable clock access for timer 2*/
	RCC->APB1ENR |= TIM2_EN;
 800043c:	4b10      	ldr	r3, [pc, #64]	; (8000480 <tim2_1hz_init+0x48>)
 800043e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000440:	4a0f      	ldr	r2, [pc, #60]	; (8000480 <tim2_1hz_init+0x48>)
 8000442:	f043 0301 	orr.w	r3, r3, #1
 8000446:	6413      	str	r3, [r2, #64]	; 0x40

	/*Set the prescaler value*/
	TIM2->PSC = 16000 - 1;
 8000448:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 800044c:	f643 627f 	movw	r2, #15999	; 0x3e7f
 8000450:	629a      	str	r2, [r3, #40]	; 0x28

	/*Set the auto reload register value*/
	TIM2->ARR = 1000 - 1;
 8000452:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000456:	f240 32e7 	movw	r2, #999	; 0x3e7
 800045a:	62da      	str	r2, [r3, #44]	; 0x2c

	/*Clear the counter*/
	TIM2->CNT = 0;
 800045c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000460:	2200      	movs	r2, #0
 8000462:	625a      	str	r2, [r3, #36]	; 0x24

	/*Enable the timer*/
	TIM2->CR1 |= (1U<<0);
 8000464:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 800046e:	f043 0301 	orr.w	r3, r3, #1
 8000472:	6013      	str	r3, [r2, #0]
}
 8000474:	bf00      	nop
 8000476:	46bd      	mov	sp, r7
 8000478:	f85d 7b04 	ldr.w	r7, [sp], #4
 800047c:	4770      	bx	lr
 800047e:	bf00      	nop
 8000480:	40023800 	.word	0x40023800

08000484 <__io_putchar>:
static uint16_t uart_bd(uint32_t Periphclk, uint32_t BaudRate);
void uart2_write(int ch);

/*put char function is used to return the unsigned character*/
int __io_putchar(int ch)
{
 8000484:	b580      	push	{r7, lr}
 8000486:	b082      	sub	sp, #8
 8000488:	af00      	add	r7, sp, #0
 800048a:	6078      	str	r0, [r7, #4]
	uart2_write(ch);
 800048c:	6878      	ldr	r0, [r7, #4]
 800048e:	f000 f805 	bl	800049c <uart2_write>
	return ch;
 8000492:	687b      	ldr	r3, [r7, #4]
}
 8000494:	4618      	mov	r0, r3
 8000496:	3708      	adds	r7, #8
 8000498:	46bd      	mov	sp, r7
 800049a:	bd80      	pop	{r7, pc}

0800049c <uart2_write>:
}


/*uart2 write which sends the value into data register*/
void uart2_write(int ch)
{
 800049c:	b480      	push	{r7}
 800049e:	b083      	sub	sp, #12
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	6078      	str	r0, [r7, #4]
	//Transmit data register is empty
	while(!(USART2->SR & SR_TXE)){}
 80004a4:	bf00      	nop
 80004a6:	4b08      	ldr	r3, [pc, #32]	; (80004c8 <uart2_write+0x2c>)
 80004a8:	681b      	ldr	r3, [r3, #0]
 80004aa:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80004ae:	2b00      	cmp	r3, #0
 80004b0:	d0f9      	beq.n	80004a6 <uart2_write+0xa>

	//write to transmit data register
	USART2->DR = (ch & 0xFF);
 80004b2:	687b      	ldr	r3, [r7, #4]
 80004b4:	4a04      	ldr	r2, [pc, #16]	; (80004c8 <uart2_write+0x2c>)
 80004b6:	b2db      	uxtb	r3, r3
 80004b8:	6053      	str	r3, [r2, #4]
}
 80004ba:	bf00      	nop
 80004bc:	370c      	adds	r7, #12
 80004be:	46bd      	mov	sp, r7
 80004c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c4:	4770      	bx	lr
 80004c6:	bf00      	nop
 80004c8:	40004400 	.word	0x40004400

080004cc <uart_set_baudrate>:
	return USART2->DR;
}

/*uart set baudrate whcih gets the value from the user and sets it to BRR*/
static void uart_set_baudrate(USART_TypeDef *USARTx, uint32_t Periphclk, uint32_t BaudRate)
{
 80004cc:	b580      	push	{r7, lr}
 80004ce:	b084      	sub	sp, #16
 80004d0:	af00      	add	r7, sp, #0
 80004d2:	60f8      	str	r0, [r7, #12]
 80004d4:	60b9      	str	r1, [r7, #8]
 80004d6:	607a      	str	r2, [r7, #4]
	USARTx->BRR = uart_bd(Periphclk,BaudRate);
 80004d8:	6879      	ldr	r1, [r7, #4]
 80004da:	68b8      	ldr	r0, [r7, #8]
 80004dc:	f000 f808 	bl	80004f0 <uart_bd>
 80004e0:	4603      	mov	r3, r0
 80004e2:	461a      	mov	r2, r3
 80004e4:	68fb      	ldr	r3, [r7, #12]
 80004e6:	609a      	str	r2, [r3, #8]
}
 80004e8:	bf00      	nop
 80004ea:	3710      	adds	r7, #16
 80004ec:	46bd      	mov	sp, r7
 80004ee:	bd80      	pop	{r7, pc}

080004f0 <uart_bd>:

/*uart bd which return the calculated periphclk and baudrate*/
static uint16_t uart_bd(uint32_t Periphclk, uint32_t BaudRate)
{
 80004f0:	b480      	push	{r7}
 80004f2:	b083      	sub	sp, #12
 80004f4:	af00      	add	r7, sp, #0
 80004f6:	6078      	str	r0, [r7, #4]
 80004f8:	6039      	str	r1, [r7, #0]
	return ((Periphclk + (BaudRate/2U))/BaudRate);
 80004fa:	683b      	ldr	r3, [r7, #0]
 80004fc:	085a      	lsrs	r2, r3, #1
 80004fe:	687b      	ldr	r3, [r7, #4]
 8000500:	441a      	add	r2, r3
 8000502:	683b      	ldr	r3, [r7, #0]
 8000504:	fbb2 f3f3 	udiv	r3, r2, r3
 8000508:	b29b      	uxth	r3, r3
}
 800050a:	4618      	mov	r0, r3
 800050c:	370c      	adds	r7, #12
 800050e:	46bd      	mov	sp, r7
 8000510:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000514:	4770      	bx	lr
	...

08000518 <uart_rxtx_init>:


/*uart tx init where all the declaration are done*/
void uart_rxtx_init(void)
{
 8000518:	b580      	push	{r7, lr}
 800051a:	af00      	add	r7, sp, #0
/*Configure gpioa pin*/
//Configure clock access
	RCC->AHB1ENR |= GPIOAEN;
 800051c:	4b32      	ldr	r3, [pc, #200]	; (80005e8 <uart_rxtx_init+0xd0>)
 800051e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000520:	4a31      	ldr	r2, [pc, #196]	; (80005e8 <uart_rxtx_init+0xd0>)
 8000522:	f043 0301 	orr.w	r3, r3, #1
 8000526:	6313      	str	r3, [r2, #48]	; 0x30

//Configure alternate function for gpioa PA2
	GPIOA->MODER &=~(1U<<4);
 8000528:	4b30      	ldr	r3, [pc, #192]	; (80005ec <uart_rxtx_init+0xd4>)
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	4a2f      	ldr	r2, [pc, #188]	; (80005ec <uart_rxtx_init+0xd4>)
 800052e:	f023 0310 	bic.w	r3, r3, #16
 8000532:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<5);
 8000534:	4b2d      	ldr	r3, [pc, #180]	; (80005ec <uart_rxtx_init+0xd4>)
 8000536:	681b      	ldr	r3, [r3, #0]
 8000538:	4a2c      	ldr	r2, [pc, #176]	; (80005ec <uart_rxtx_init+0xd4>)
 800053a:	f043 0320 	orr.w	r3, r3, #32
 800053e:	6013      	str	r3, [r2, #0]


//Configure alternate function to uart tx(af07)
	GPIOA->AFR[0] |= (1U<<8);
 8000540:	4b2a      	ldr	r3, [pc, #168]	; (80005ec <uart_rxtx_init+0xd4>)
 8000542:	6a1b      	ldr	r3, [r3, #32]
 8000544:	4a29      	ldr	r2, [pc, #164]	; (80005ec <uart_rxtx_init+0xd4>)
 8000546:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800054a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<9);
 800054c:	4b27      	ldr	r3, [pc, #156]	; (80005ec <uart_rxtx_init+0xd4>)
 800054e:	6a1b      	ldr	r3, [r3, #32]
 8000550:	4a26      	ldr	r2, [pc, #152]	; (80005ec <uart_rxtx_init+0xd4>)
 8000552:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8000556:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<10);
 8000558:	4b24      	ldr	r3, [pc, #144]	; (80005ec <uart_rxtx_init+0xd4>)
 800055a:	6a1b      	ldr	r3, [r3, #32]
 800055c:	4a23      	ldr	r2, [pc, #140]	; (80005ec <uart_rxtx_init+0xd4>)
 800055e:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8000562:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &=~(1U<<11);
 8000564:	4b21      	ldr	r3, [pc, #132]	; (80005ec <uart_rxtx_init+0xd4>)
 8000566:	6a1b      	ldr	r3, [r3, #32]
 8000568:	4a20      	ldr	r2, [pc, #128]	; (80005ec <uart_rxtx_init+0xd4>)
 800056a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800056e:	6213      	str	r3, [r2, #32]

//Configure alternate function for gpioa PA3
	GPIOA->MODER &=~(1U<<6);
 8000570:	4b1e      	ldr	r3, [pc, #120]	; (80005ec <uart_rxtx_init+0xd4>)
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	4a1d      	ldr	r2, [pc, #116]	; (80005ec <uart_rxtx_init+0xd4>)
 8000576:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800057a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U<<7);
 800057c:	4b1b      	ldr	r3, [pc, #108]	; (80005ec <uart_rxtx_init+0xd4>)
 800057e:	681b      	ldr	r3, [r3, #0]
 8000580:	4a1a      	ldr	r2, [pc, #104]	; (80005ec <uart_rxtx_init+0xd4>)
 8000582:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000586:	6013      	str	r3, [r2, #0]

//Configure alternate function to uart tx(af07)
	GPIOA->AFR[0] |= (1U<<12);
 8000588:	4b18      	ldr	r3, [pc, #96]	; (80005ec <uart_rxtx_init+0xd4>)
 800058a:	6a1b      	ldr	r3, [r3, #32]
 800058c:	4a17      	ldr	r2, [pc, #92]	; (80005ec <uart_rxtx_init+0xd4>)
 800058e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000592:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<13);
 8000594:	4b15      	ldr	r3, [pc, #84]	; (80005ec <uart_rxtx_init+0xd4>)
 8000596:	6a1b      	ldr	r3, [r3, #32]
 8000598:	4a14      	ldr	r2, [pc, #80]	; (80005ec <uart_rxtx_init+0xd4>)
 800059a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800059e:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U<<14);
 80005a0:	4b12      	ldr	r3, [pc, #72]	; (80005ec <uart_rxtx_init+0xd4>)
 80005a2:	6a1b      	ldr	r3, [r3, #32]
 80005a4:	4a11      	ldr	r2, [pc, #68]	; (80005ec <uart_rxtx_init+0xd4>)
 80005a6:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80005aa:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &=~(1U<<15);
 80005ac:	4b0f      	ldr	r3, [pc, #60]	; (80005ec <uart_rxtx_init+0xd4>)
 80005ae:	6a1b      	ldr	r3, [r3, #32]
 80005b0:	4a0e      	ldr	r2, [pc, #56]	; (80005ec <uart_rxtx_init+0xd4>)
 80005b2:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 80005b6:	6213      	str	r3, [r2, #32]

//Uart clock access
	RCC->APB1ENR |= UART2EN;
 80005b8:	4b0b      	ldr	r3, [pc, #44]	; (80005e8 <uart_rxtx_init+0xd0>)
 80005ba:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80005bc:	4a0a      	ldr	r2, [pc, #40]	; (80005e8 <uart_rxtx_init+0xd0>)
 80005be:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80005c2:	6413      	str	r3, [r2, #64]	; 0x40

//Uart baudrate
	uart_set_baudrate(USART2, APB1_clk, Uart_BaudRate);
 80005c4:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80005c8:	4909      	ldr	r1, [pc, #36]	; (80005f0 <uart_rxtx_init+0xd8>)
 80005ca:	480a      	ldr	r0, [pc, #40]	; (80005f4 <uart_rxtx_init+0xdc>)
 80005cc:	f7ff ff7e 	bl	80004cc <uart_set_baudrate>

//Uart to set tx/rx
	USART2->CR1 = (CR1_TE | CR1_RE);
 80005d0:	4b08      	ldr	r3, [pc, #32]	; (80005f4 <uart_rxtx_init+0xdc>)
 80005d2:	220c      	movs	r2, #12
 80005d4:	60da      	str	r2, [r3, #12]



//Uart enable
	USART2->CR1 |= CR1_UE;
 80005d6:	4b07      	ldr	r3, [pc, #28]	; (80005f4 <uart_rxtx_init+0xdc>)
 80005d8:	68db      	ldr	r3, [r3, #12]
 80005da:	4a06      	ldr	r2, [pc, #24]	; (80005f4 <uart_rxtx_init+0xdc>)
 80005dc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80005e0:	60d3      	str	r3, [r2, #12]
}
 80005e2:	bf00      	nop
 80005e4:	bd80      	pop	{r7, pc}
 80005e6:	bf00      	nop
 80005e8:	40023800 	.word	0x40023800
 80005ec:	40020000 	.word	0x40020000
 80005f0:	00f42400 	.word	0x00f42400
 80005f4:	40004400 	.word	0x40004400

080005f8 <Reset_Handler>:
 80005f8:	480d      	ldr	r0, [pc, #52]	; (8000630 <LoopForever+0x2>)
 80005fa:	4685      	mov	sp, r0
 80005fc:	f3af 8000 	nop.w
 8000600:	480c      	ldr	r0, [pc, #48]	; (8000634 <LoopForever+0x6>)
 8000602:	490d      	ldr	r1, [pc, #52]	; (8000638 <LoopForever+0xa>)
 8000604:	4a0d      	ldr	r2, [pc, #52]	; (800063c <LoopForever+0xe>)
 8000606:	2300      	movs	r3, #0
 8000608:	e002      	b.n	8000610 <LoopCopyDataInit>

0800060a <CopyDataInit>:
 800060a:	58d4      	ldr	r4, [r2, r3]
 800060c:	50c4      	str	r4, [r0, r3]
 800060e:	3304      	adds	r3, #4

08000610 <LoopCopyDataInit>:
 8000610:	18c4      	adds	r4, r0, r3
 8000612:	428c      	cmp	r4, r1
 8000614:	d3f9      	bcc.n	800060a <CopyDataInit>
 8000616:	4a0a      	ldr	r2, [pc, #40]	; (8000640 <LoopForever+0x12>)
 8000618:	4c0a      	ldr	r4, [pc, #40]	; (8000644 <LoopForever+0x16>)
 800061a:	2300      	movs	r3, #0
 800061c:	e001      	b.n	8000622 <LoopFillZerobss>

0800061e <FillZerobss>:
 800061e:	6013      	str	r3, [r2, #0]
 8000620:	3204      	adds	r2, #4

08000622 <LoopFillZerobss>:
 8000622:	42a2      	cmp	r2, r4
 8000624:	d3fb      	bcc.n	800061e <FillZerobss>
 8000626:	f000 f817 	bl	8000658 <__libc_init_array>
 800062a:	f7ff fe29 	bl	8000280 <main>

0800062e <LoopForever>:
 800062e:	e7fe      	b.n	800062e <LoopForever>
 8000630:	20020000 	.word	0x20020000
 8000634:	20000000 	.word	0x20000000
 8000638:	20000064 	.word	0x20000064
 800063c:	0800169c 	.word	0x0800169c
 8000640:	20000064 	.word	0x20000064
 8000644:	20000094 	.word	0x20000094

08000648 <ADC_IRQHandler>:
 8000648:	e7fe      	b.n	8000648 <ADC_IRQHandler>
	...

0800064c <__errno>:
 800064c:	4b01      	ldr	r3, [pc, #4]	; (8000654 <__errno+0x8>)
 800064e:	6818      	ldr	r0, [r3, #0]
 8000650:	4770      	bx	lr
 8000652:	bf00      	nop
 8000654:	20000000 	.word	0x20000000

08000658 <__libc_init_array>:
 8000658:	b570      	push	{r4, r5, r6, lr}
 800065a:	4d0d      	ldr	r5, [pc, #52]	; (8000690 <__libc_init_array+0x38>)
 800065c:	4c0d      	ldr	r4, [pc, #52]	; (8000694 <__libc_init_array+0x3c>)
 800065e:	1b64      	subs	r4, r4, r5
 8000660:	10a4      	asrs	r4, r4, #2
 8000662:	2600      	movs	r6, #0
 8000664:	42a6      	cmp	r6, r4
 8000666:	d109      	bne.n	800067c <__libc_init_array+0x24>
 8000668:	4d0b      	ldr	r5, [pc, #44]	; (8000698 <__libc_init_array+0x40>)
 800066a:	4c0c      	ldr	r4, [pc, #48]	; (800069c <__libc_init_array+0x44>)
 800066c:	f000 ffae 	bl	80015cc <_init>
 8000670:	1b64      	subs	r4, r4, r5
 8000672:	10a4      	asrs	r4, r4, #2
 8000674:	2600      	movs	r6, #0
 8000676:	42a6      	cmp	r6, r4
 8000678:	d105      	bne.n	8000686 <__libc_init_array+0x2e>
 800067a:	bd70      	pop	{r4, r5, r6, pc}
 800067c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000680:	4798      	blx	r3
 8000682:	3601      	adds	r6, #1
 8000684:	e7ee      	b.n	8000664 <__libc_init_array+0xc>
 8000686:	f855 3b04 	ldr.w	r3, [r5], #4
 800068a:	4798      	blx	r3
 800068c:	3601      	adds	r6, #1
 800068e:	e7f2      	b.n	8000676 <__libc_init_array+0x1e>
 8000690:	08001694 	.word	0x08001694
 8000694:	08001694 	.word	0x08001694
 8000698:	08001694 	.word	0x08001694
 800069c:	08001698 	.word	0x08001698

080006a0 <memset>:
 80006a0:	4402      	add	r2, r0
 80006a2:	4603      	mov	r3, r0
 80006a4:	4293      	cmp	r3, r2
 80006a6:	d100      	bne.n	80006aa <memset+0xa>
 80006a8:	4770      	bx	lr
 80006aa:	f803 1b01 	strb.w	r1, [r3], #1
 80006ae:	e7f9      	b.n	80006a4 <memset+0x4>

080006b0 <iprintf>:
 80006b0:	b40f      	push	{r0, r1, r2, r3}
 80006b2:	4b0a      	ldr	r3, [pc, #40]	; (80006dc <iprintf+0x2c>)
 80006b4:	b513      	push	{r0, r1, r4, lr}
 80006b6:	681c      	ldr	r4, [r3, #0]
 80006b8:	b124      	cbz	r4, 80006c4 <iprintf+0x14>
 80006ba:	69a3      	ldr	r3, [r4, #24]
 80006bc:	b913      	cbnz	r3, 80006c4 <iprintf+0x14>
 80006be:	4620      	mov	r0, r4
 80006c0:	f000 f866 	bl	8000790 <__sinit>
 80006c4:	ab05      	add	r3, sp, #20
 80006c6:	9a04      	ldr	r2, [sp, #16]
 80006c8:	68a1      	ldr	r1, [r4, #8]
 80006ca:	9301      	str	r3, [sp, #4]
 80006cc:	4620      	mov	r0, r4
 80006ce:	f000 f9bd 	bl	8000a4c <_vfiprintf_r>
 80006d2:	b002      	add	sp, #8
 80006d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006d8:	b004      	add	sp, #16
 80006da:	4770      	bx	lr
 80006dc:	20000000 	.word	0x20000000

080006e0 <std>:
 80006e0:	2300      	movs	r3, #0
 80006e2:	b510      	push	{r4, lr}
 80006e4:	4604      	mov	r4, r0
 80006e6:	e9c0 3300 	strd	r3, r3, [r0]
 80006ea:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80006ee:	6083      	str	r3, [r0, #8]
 80006f0:	8181      	strh	r1, [r0, #12]
 80006f2:	6643      	str	r3, [r0, #100]	; 0x64
 80006f4:	81c2      	strh	r2, [r0, #14]
 80006f6:	6183      	str	r3, [r0, #24]
 80006f8:	4619      	mov	r1, r3
 80006fa:	2208      	movs	r2, #8
 80006fc:	305c      	adds	r0, #92	; 0x5c
 80006fe:	f7ff ffcf 	bl	80006a0 <memset>
 8000702:	4b05      	ldr	r3, [pc, #20]	; (8000718 <std+0x38>)
 8000704:	6263      	str	r3, [r4, #36]	; 0x24
 8000706:	4b05      	ldr	r3, [pc, #20]	; (800071c <std+0x3c>)
 8000708:	62a3      	str	r3, [r4, #40]	; 0x28
 800070a:	4b05      	ldr	r3, [pc, #20]	; (8000720 <std+0x40>)
 800070c:	62e3      	str	r3, [r4, #44]	; 0x2c
 800070e:	4b05      	ldr	r3, [pc, #20]	; (8000724 <std+0x44>)
 8000710:	6224      	str	r4, [r4, #32]
 8000712:	6323      	str	r3, [r4, #48]	; 0x30
 8000714:	bd10      	pop	{r4, pc}
 8000716:	bf00      	nop
 8000718:	08000ff5 	.word	0x08000ff5
 800071c:	08001017 	.word	0x08001017
 8000720:	0800104f 	.word	0x0800104f
 8000724:	08001073 	.word	0x08001073

08000728 <_cleanup_r>:
 8000728:	4901      	ldr	r1, [pc, #4]	; (8000730 <_cleanup_r+0x8>)
 800072a:	f000 b8af 	b.w	800088c <_fwalk_reent>
 800072e:	bf00      	nop
 8000730:	0800134d 	.word	0x0800134d

08000734 <__sfmoreglue>:
 8000734:	b570      	push	{r4, r5, r6, lr}
 8000736:	2268      	movs	r2, #104	; 0x68
 8000738:	1e4d      	subs	r5, r1, #1
 800073a:	4355      	muls	r5, r2
 800073c:	460e      	mov	r6, r1
 800073e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000742:	f000 f8e5 	bl	8000910 <_malloc_r>
 8000746:	4604      	mov	r4, r0
 8000748:	b140      	cbz	r0, 800075c <__sfmoreglue+0x28>
 800074a:	2100      	movs	r1, #0
 800074c:	e9c0 1600 	strd	r1, r6, [r0]
 8000750:	300c      	adds	r0, #12
 8000752:	60a0      	str	r0, [r4, #8]
 8000754:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000758:	f7ff ffa2 	bl	80006a0 <memset>
 800075c:	4620      	mov	r0, r4
 800075e:	bd70      	pop	{r4, r5, r6, pc}

08000760 <__sfp_lock_acquire>:
 8000760:	4801      	ldr	r0, [pc, #4]	; (8000768 <__sfp_lock_acquire+0x8>)
 8000762:	f000 b8b3 	b.w	80008cc <__retarget_lock_acquire_recursive>
 8000766:	bf00      	nop
 8000768:	20000085 	.word	0x20000085

0800076c <__sfp_lock_release>:
 800076c:	4801      	ldr	r0, [pc, #4]	; (8000774 <__sfp_lock_release+0x8>)
 800076e:	f000 b8ae 	b.w	80008ce <__retarget_lock_release_recursive>
 8000772:	bf00      	nop
 8000774:	20000085 	.word	0x20000085

08000778 <__sinit_lock_acquire>:
 8000778:	4801      	ldr	r0, [pc, #4]	; (8000780 <__sinit_lock_acquire+0x8>)
 800077a:	f000 b8a7 	b.w	80008cc <__retarget_lock_acquire_recursive>
 800077e:	bf00      	nop
 8000780:	20000086 	.word	0x20000086

08000784 <__sinit_lock_release>:
 8000784:	4801      	ldr	r0, [pc, #4]	; (800078c <__sinit_lock_release+0x8>)
 8000786:	f000 b8a2 	b.w	80008ce <__retarget_lock_release_recursive>
 800078a:	bf00      	nop
 800078c:	20000086 	.word	0x20000086

08000790 <__sinit>:
 8000790:	b510      	push	{r4, lr}
 8000792:	4604      	mov	r4, r0
 8000794:	f7ff fff0 	bl	8000778 <__sinit_lock_acquire>
 8000798:	69a3      	ldr	r3, [r4, #24]
 800079a:	b11b      	cbz	r3, 80007a4 <__sinit+0x14>
 800079c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007a0:	f7ff bff0 	b.w	8000784 <__sinit_lock_release>
 80007a4:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80007a8:	6523      	str	r3, [r4, #80]	; 0x50
 80007aa:	4b13      	ldr	r3, [pc, #76]	; (80007f8 <__sinit+0x68>)
 80007ac:	4a13      	ldr	r2, [pc, #76]	; (80007fc <__sinit+0x6c>)
 80007ae:	681b      	ldr	r3, [r3, #0]
 80007b0:	62a2      	str	r2, [r4, #40]	; 0x28
 80007b2:	42a3      	cmp	r3, r4
 80007b4:	bf04      	itt	eq
 80007b6:	2301      	moveq	r3, #1
 80007b8:	61a3      	streq	r3, [r4, #24]
 80007ba:	4620      	mov	r0, r4
 80007bc:	f000 f820 	bl	8000800 <__sfp>
 80007c0:	6060      	str	r0, [r4, #4]
 80007c2:	4620      	mov	r0, r4
 80007c4:	f000 f81c 	bl	8000800 <__sfp>
 80007c8:	60a0      	str	r0, [r4, #8]
 80007ca:	4620      	mov	r0, r4
 80007cc:	f000 f818 	bl	8000800 <__sfp>
 80007d0:	2200      	movs	r2, #0
 80007d2:	60e0      	str	r0, [r4, #12]
 80007d4:	2104      	movs	r1, #4
 80007d6:	6860      	ldr	r0, [r4, #4]
 80007d8:	f7ff ff82 	bl	80006e0 <std>
 80007dc:	68a0      	ldr	r0, [r4, #8]
 80007de:	2201      	movs	r2, #1
 80007e0:	2109      	movs	r1, #9
 80007e2:	f7ff ff7d 	bl	80006e0 <std>
 80007e6:	68e0      	ldr	r0, [r4, #12]
 80007e8:	2202      	movs	r2, #2
 80007ea:	2112      	movs	r1, #18
 80007ec:	f7ff ff78 	bl	80006e0 <std>
 80007f0:	2301      	movs	r3, #1
 80007f2:	61a3      	str	r3, [r4, #24]
 80007f4:	e7d2      	b.n	800079c <__sinit+0xc>
 80007f6:	bf00      	nop
 80007f8:	080015fc 	.word	0x080015fc
 80007fc:	08000729 	.word	0x08000729

08000800 <__sfp>:
 8000800:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000802:	4607      	mov	r7, r0
 8000804:	f7ff ffac 	bl	8000760 <__sfp_lock_acquire>
 8000808:	4b1e      	ldr	r3, [pc, #120]	; (8000884 <__sfp+0x84>)
 800080a:	681e      	ldr	r6, [r3, #0]
 800080c:	69b3      	ldr	r3, [r6, #24]
 800080e:	b913      	cbnz	r3, 8000816 <__sfp+0x16>
 8000810:	4630      	mov	r0, r6
 8000812:	f7ff ffbd 	bl	8000790 <__sinit>
 8000816:	3648      	adds	r6, #72	; 0x48
 8000818:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 800081c:	3b01      	subs	r3, #1
 800081e:	d503      	bpl.n	8000828 <__sfp+0x28>
 8000820:	6833      	ldr	r3, [r6, #0]
 8000822:	b30b      	cbz	r3, 8000868 <__sfp+0x68>
 8000824:	6836      	ldr	r6, [r6, #0]
 8000826:	e7f7      	b.n	8000818 <__sfp+0x18>
 8000828:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 800082c:	b9d5      	cbnz	r5, 8000864 <__sfp+0x64>
 800082e:	4b16      	ldr	r3, [pc, #88]	; (8000888 <__sfp+0x88>)
 8000830:	60e3      	str	r3, [r4, #12]
 8000832:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000836:	6665      	str	r5, [r4, #100]	; 0x64
 8000838:	f000 f847 	bl	80008ca <__retarget_lock_init_recursive>
 800083c:	f7ff ff96 	bl	800076c <__sfp_lock_release>
 8000840:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000844:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000848:	6025      	str	r5, [r4, #0]
 800084a:	61a5      	str	r5, [r4, #24]
 800084c:	2208      	movs	r2, #8
 800084e:	4629      	mov	r1, r5
 8000850:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000854:	f7ff ff24 	bl	80006a0 <memset>
 8000858:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 800085c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000860:	4620      	mov	r0, r4
 8000862:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000864:	3468      	adds	r4, #104	; 0x68
 8000866:	e7d9      	b.n	800081c <__sfp+0x1c>
 8000868:	2104      	movs	r1, #4
 800086a:	4638      	mov	r0, r7
 800086c:	f7ff ff62 	bl	8000734 <__sfmoreglue>
 8000870:	4604      	mov	r4, r0
 8000872:	6030      	str	r0, [r6, #0]
 8000874:	2800      	cmp	r0, #0
 8000876:	d1d5      	bne.n	8000824 <__sfp+0x24>
 8000878:	f7ff ff78 	bl	800076c <__sfp_lock_release>
 800087c:	230c      	movs	r3, #12
 800087e:	603b      	str	r3, [r7, #0]
 8000880:	e7ee      	b.n	8000860 <__sfp+0x60>
 8000882:	bf00      	nop
 8000884:	080015fc 	.word	0x080015fc
 8000888:	ffff0001 	.word	0xffff0001

0800088c <_fwalk_reent>:
 800088c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000890:	4606      	mov	r6, r0
 8000892:	4688      	mov	r8, r1
 8000894:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000898:	2700      	movs	r7, #0
 800089a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800089e:	f1b9 0901 	subs.w	r9, r9, #1
 80008a2:	d505      	bpl.n	80008b0 <_fwalk_reent+0x24>
 80008a4:	6824      	ldr	r4, [r4, #0]
 80008a6:	2c00      	cmp	r4, #0
 80008a8:	d1f7      	bne.n	800089a <_fwalk_reent+0xe>
 80008aa:	4638      	mov	r0, r7
 80008ac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008b0:	89ab      	ldrh	r3, [r5, #12]
 80008b2:	2b01      	cmp	r3, #1
 80008b4:	d907      	bls.n	80008c6 <_fwalk_reent+0x3a>
 80008b6:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80008ba:	3301      	adds	r3, #1
 80008bc:	d003      	beq.n	80008c6 <_fwalk_reent+0x3a>
 80008be:	4629      	mov	r1, r5
 80008c0:	4630      	mov	r0, r6
 80008c2:	47c0      	blx	r8
 80008c4:	4307      	orrs	r7, r0
 80008c6:	3568      	adds	r5, #104	; 0x68
 80008c8:	e7e9      	b.n	800089e <_fwalk_reent+0x12>

080008ca <__retarget_lock_init_recursive>:
 80008ca:	4770      	bx	lr

080008cc <__retarget_lock_acquire_recursive>:
 80008cc:	4770      	bx	lr

080008ce <__retarget_lock_release_recursive>:
 80008ce:	4770      	bx	lr

080008d0 <sbrk_aligned>:
 80008d0:	b570      	push	{r4, r5, r6, lr}
 80008d2:	4e0e      	ldr	r6, [pc, #56]	; (800090c <sbrk_aligned+0x3c>)
 80008d4:	460c      	mov	r4, r1
 80008d6:	6831      	ldr	r1, [r6, #0]
 80008d8:	4605      	mov	r5, r0
 80008da:	b911      	cbnz	r1, 80008e2 <sbrk_aligned+0x12>
 80008dc:	f000 fb7a 	bl	8000fd4 <_sbrk_r>
 80008e0:	6030      	str	r0, [r6, #0]
 80008e2:	4621      	mov	r1, r4
 80008e4:	4628      	mov	r0, r5
 80008e6:	f000 fb75 	bl	8000fd4 <_sbrk_r>
 80008ea:	1c43      	adds	r3, r0, #1
 80008ec:	d00a      	beq.n	8000904 <sbrk_aligned+0x34>
 80008ee:	1cc4      	adds	r4, r0, #3
 80008f0:	f024 0403 	bic.w	r4, r4, #3
 80008f4:	42a0      	cmp	r0, r4
 80008f6:	d007      	beq.n	8000908 <sbrk_aligned+0x38>
 80008f8:	1a21      	subs	r1, r4, r0
 80008fa:	4628      	mov	r0, r5
 80008fc:	f000 fb6a 	bl	8000fd4 <_sbrk_r>
 8000900:	3001      	adds	r0, #1
 8000902:	d101      	bne.n	8000908 <sbrk_aligned+0x38>
 8000904:	f04f 34ff 	mov.w	r4, #4294967295
 8000908:	4620      	mov	r0, r4
 800090a:	bd70      	pop	{r4, r5, r6, pc}
 800090c:	2000008c 	.word	0x2000008c

08000910 <_malloc_r>:
 8000910:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000914:	1ccd      	adds	r5, r1, #3
 8000916:	f025 0503 	bic.w	r5, r5, #3
 800091a:	3508      	adds	r5, #8
 800091c:	2d0c      	cmp	r5, #12
 800091e:	bf38      	it	cc
 8000920:	250c      	movcc	r5, #12
 8000922:	2d00      	cmp	r5, #0
 8000924:	4607      	mov	r7, r0
 8000926:	db01      	blt.n	800092c <_malloc_r+0x1c>
 8000928:	42a9      	cmp	r1, r5
 800092a:	d905      	bls.n	8000938 <_malloc_r+0x28>
 800092c:	230c      	movs	r3, #12
 800092e:	603b      	str	r3, [r7, #0]
 8000930:	2600      	movs	r6, #0
 8000932:	4630      	mov	r0, r6
 8000934:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000938:	4e2e      	ldr	r6, [pc, #184]	; (80009f4 <_malloc_r+0xe4>)
 800093a:	f000 fdbb 	bl	80014b4 <__malloc_lock>
 800093e:	6833      	ldr	r3, [r6, #0]
 8000940:	461c      	mov	r4, r3
 8000942:	bb34      	cbnz	r4, 8000992 <_malloc_r+0x82>
 8000944:	4629      	mov	r1, r5
 8000946:	4638      	mov	r0, r7
 8000948:	f7ff ffc2 	bl	80008d0 <sbrk_aligned>
 800094c:	1c43      	adds	r3, r0, #1
 800094e:	4604      	mov	r4, r0
 8000950:	d14d      	bne.n	80009ee <_malloc_r+0xde>
 8000952:	6834      	ldr	r4, [r6, #0]
 8000954:	4626      	mov	r6, r4
 8000956:	2e00      	cmp	r6, #0
 8000958:	d140      	bne.n	80009dc <_malloc_r+0xcc>
 800095a:	6823      	ldr	r3, [r4, #0]
 800095c:	4631      	mov	r1, r6
 800095e:	4638      	mov	r0, r7
 8000960:	eb04 0803 	add.w	r8, r4, r3
 8000964:	f000 fb36 	bl	8000fd4 <_sbrk_r>
 8000968:	4580      	cmp	r8, r0
 800096a:	d13a      	bne.n	80009e2 <_malloc_r+0xd2>
 800096c:	6821      	ldr	r1, [r4, #0]
 800096e:	3503      	adds	r5, #3
 8000970:	1a6d      	subs	r5, r5, r1
 8000972:	f025 0503 	bic.w	r5, r5, #3
 8000976:	3508      	adds	r5, #8
 8000978:	2d0c      	cmp	r5, #12
 800097a:	bf38      	it	cc
 800097c:	250c      	movcc	r5, #12
 800097e:	4629      	mov	r1, r5
 8000980:	4638      	mov	r0, r7
 8000982:	f7ff ffa5 	bl	80008d0 <sbrk_aligned>
 8000986:	3001      	adds	r0, #1
 8000988:	d02b      	beq.n	80009e2 <_malloc_r+0xd2>
 800098a:	6823      	ldr	r3, [r4, #0]
 800098c:	442b      	add	r3, r5
 800098e:	6023      	str	r3, [r4, #0]
 8000990:	e00e      	b.n	80009b0 <_malloc_r+0xa0>
 8000992:	6822      	ldr	r2, [r4, #0]
 8000994:	1b52      	subs	r2, r2, r5
 8000996:	d41e      	bmi.n	80009d6 <_malloc_r+0xc6>
 8000998:	2a0b      	cmp	r2, #11
 800099a:	d916      	bls.n	80009ca <_malloc_r+0xba>
 800099c:	1961      	adds	r1, r4, r5
 800099e:	42a3      	cmp	r3, r4
 80009a0:	6025      	str	r5, [r4, #0]
 80009a2:	bf18      	it	ne
 80009a4:	6059      	strne	r1, [r3, #4]
 80009a6:	6863      	ldr	r3, [r4, #4]
 80009a8:	bf08      	it	eq
 80009aa:	6031      	streq	r1, [r6, #0]
 80009ac:	5162      	str	r2, [r4, r5]
 80009ae:	604b      	str	r3, [r1, #4]
 80009b0:	4638      	mov	r0, r7
 80009b2:	f104 060b 	add.w	r6, r4, #11
 80009b6:	f000 fd83 	bl	80014c0 <__malloc_unlock>
 80009ba:	f026 0607 	bic.w	r6, r6, #7
 80009be:	1d23      	adds	r3, r4, #4
 80009c0:	1af2      	subs	r2, r6, r3
 80009c2:	d0b6      	beq.n	8000932 <_malloc_r+0x22>
 80009c4:	1b9b      	subs	r3, r3, r6
 80009c6:	50a3      	str	r3, [r4, r2]
 80009c8:	e7b3      	b.n	8000932 <_malloc_r+0x22>
 80009ca:	6862      	ldr	r2, [r4, #4]
 80009cc:	42a3      	cmp	r3, r4
 80009ce:	bf0c      	ite	eq
 80009d0:	6032      	streq	r2, [r6, #0]
 80009d2:	605a      	strne	r2, [r3, #4]
 80009d4:	e7ec      	b.n	80009b0 <_malloc_r+0xa0>
 80009d6:	4623      	mov	r3, r4
 80009d8:	6864      	ldr	r4, [r4, #4]
 80009da:	e7b2      	b.n	8000942 <_malloc_r+0x32>
 80009dc:	4634      	mov	r4, r6
 80009de:	6876      	ldr	r6, [r6, #4]
 80009e0:	e7b9      	b.n	8000956 <_malloc_r+0x46>
 80009e2:	230c      	movs	r3, #12
 80009e4:	603b      	str	r3, [r7, #0]
 80009e6:	4638      	mov	r0, r7
 80009e8:	f000 fd6a 	bl	80014c0 <__malloc_unlock>
 80009ec:	e7a1      	b.n	8000932 <_malloc_r+0x22>
 80009ee:	6025      	str	r5, [r4, #0]
 80009f0:	e7de      	b.n	80009b0 <_malloc_r+0xa0>
 80009f2:	bf00      	nop
 80009f4:	20000088 	.word	0x20000088

080009f8 <__sfputc_r>:
 80009f8:	6893      	ldr	r3, [r2, #8]
 80009fa:	3b01      	subs	r3, #1
 80009fc:	2b00      	cmp	r3, #0
 80009fe:	b410      	push	{r4}
 8000a00:	6093      	str	r3, [r2, #8]
 8000a02:	da08      	bge.n	8000a16 <__sfputc_r+0x1e>
 8000a04:	6994      	ldr	r4, [r2, #24]
 8000a06:	42a3      	cmp	r3, r4
 8000a08:	db01      	blt.n	8000a0e <__sfputc_r+0x16>
 8000a0a:	290a      	cmp	r1, #10
 8000a0c:	d103      	bne.n	8000a16 <__sfputc_r+0x1e>
 8000a0e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a12:	f000 bb33 	b.w	800107c <__swbuf_r>
 8000a16:	6813      	ldr	r3, [r2, #0]
 8000a18:	1c58      	adds	r0, r3, #1
 8000a1a:	6010      	str	r0, [r2, #0]
 8000a1c:	7019      	strb	r1, [r3, #0]
 8000a1e:	4608      	mov	r0, r1
 8000a20:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a24:	4770      	bx	lr

08000a26 <__sfputs_r>:
 8000a26:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a28:	4606      	mov	r6, r0
 8000a2a:	460f      	mov	r7, r1
 8000a2c:	4614      	mov	r4, r2
 8000a2e:	18d5      	adds	r5, r2, r3
 8000a30:	42ac      	cmp	r4, r5
 8000a32:	d101      	bne.n	8000a38 <__sfputs_r+0x12>
 8000a34:	2000      	movs	r0, #0
 8000a36:	e007      	b.n	8000a48 <__sfputs_r+0x22>
 8000a38:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a3c:	463a      	mov	r2, r7
 8000a3e:	4630      	mov	r0, r6
 8000a40:	f7ff ffda 	bl	80009f8 <__sfputc_r>
 8000a44:	1c43      	adds	r3, r0, #1
 8000a46:	d1f3      	bne.n	8000a30 <__sfputs_r+0xa>
 8000a48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a4c <_vfiprintf_r>:
 8000a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a50:	460d      	mov	r5, r1
 8000a52:	b09d      	sub	sp, #116	; 0x74
 8000a54:	4614      	mov	r4, r2
 8000a56:	4698      	mov	r8, r3
 8000a58:	4606      	mov	r6, r0
 8000a5a:	b118      	cbz	r0, 8000a64 <_vfiprintf_r+0x18>
 8000a5c:	6983      	ldr	r3, [r0, #24]
 8000a5e:	b90b      	cbnz	r3, 8000a64 <_vfiprintf_r+0x18>
 8000a60:	f7ff fe96 	bl	8000790 <__sinit>
 8000a64:	4b89      	ldr	r3, [pc, #548]	; (8000c8c <_vfiprintf_r+0x240>)
 8000a66:	429d      	cmp	r5, r3
 8000a68:	d11b      	bne.n	8000aa2 <_vfiprintf_r+0x56>
 8000a6a:	6875      	ldr	r5, [r6, #4]
 8000a6c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a6e:	07d9      	lsls	r1, r3, #31
 8000a70:	d405      	bmi.n	8000a7e <_vfiprintf_r+0x32>
 8000a72:	89ab      	ldrh	r3, [r5, #12]
 8000a74:	059a      	lsls	r2, r3, #22
 8000a76:	d402      	bmi.n	8000a7e <_vfiprintf_r+0x32>
 8000a78:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a7a:	f7ff ff27 	bl	80008cc <__retarget_lock_acquire_recursive>
 8000a7e:	89ab      	ldrh	r3, [r5, #12]
 8000a80:	071b      	lsls	r3, r3, #28
 8000a82:	d501      	bpl.n	8000a88 <_vfiprintf_r+0x3c>
 8000a84:	692b      	ldr	r3, [r5, #16]
 8000a86:	b9eb      	cbnz	r3, 8000ac4 <_vfiprintf_r+0x78>
 8000a88:	4629      	mov	r1, r5
 8000a8a:	4630      	mov	r0, r6
 8000a8c:	f000 fb5a 	bl	8001144 <__swsetup_r>
 8000a90:	b1c0      	cbz	r0, 8000ac4 <_vfiprintf_r+0x78>
 8000a92:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a94:	07dc      	lsls	r4, r3, #31
 8000a96:	d50e      	bpl.n	8000ab6 <_vfiprintf_r+0x6a>
 8000a98:	f04f 30ff 	mov.w	r0, #4294967295
 8000a9c:	b01d      	add	sp, #116	; 0x74
 8000a9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000aa2:	4b7b      	ldr	r3, [pc, #492]	; (8000c90 <_vfiprintf_r+0x244>)
 8000aa4:	429d      	cmp	r5, r3
 8000aa6:	d101      	bne.n	8000aac <_vfiprintf_r+0x60>
 8000aa8:	68b5      	ldr	r5, [r6, #8]
 8000aaa:	e7df      	b.n	8000a6c <_vfiprintf_r+0x20>
 8000aac:	4b79      	ldr	r3, [pc, #484]	; (8000c94 <_vfiprintf_r+0x248>)
 8000aae:	429d      	cmp	r5, r3
 8000ab0:	bf08      	it	eq
 8000ab2:	68f5      	ldreq	r5, [r6, #12]
 8000ab4:	e7da      	b.n	8000a6c <_vfiprintf_r+0x20>
 8000ab6:	89ab      	ldrh	r3, [r5, #12]
 8000ab8:	0598      	lsls	r0, r3, #22
 8000aba:	d4ed      	bmi.n	8000a98 <_vfiprintf_r+0x4c>
 8000abc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000abe:	f7ff ff06 	bl	80008ce <__retarget_lock_release_recursive>
 8000ac2:	e7e9      	b.n	8000a98 <_vfiprintf_r+0x4c>
 8000ac4:	2300      	movs	r3, #0
 8000ac6:	9309      	str	r3, [sp, #36]	; 0x24
 8000ac8:	2320      	movs	r3, #32
 8000aca:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000ace:	f8cd 800c 	str.w	r8, [sp, #12]
 8000ad2:	2330      	movs	r3, #48	; 0x30
 8000ad4:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000c98 <_vfiprintf_r+0x24c>
 8000ad8:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000adc:	f04f 0901 	mov.w	r9, #1
 8000ae0:	4623      	mov	r3, r4
 8000ae2:	469a      	mov	sl, r3
 8000ae4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000ae8:	b10a      	cbz	r2, 8000aee <_vfiprintf_r+0xa2>
 8000aea:	2a25      	cmp	r2, #37	; 0x25
 8000aec:	d1f9      	bne.n	8000ae2 <_vfiprintf_r+0x96>
 8000aee:	ebba 0b04 	subs.w	fp, sl, r4
 8000af2:	d00b      	beq.n	8000b0c <_vfiprintf_r+0xc0>
 8000af4:	465b      	mov	r3, fp
 8000af6:	4622      	mov	r2, r4
 8000af8:	4629      	mov	r1, r5
 8000afa:	4630      	mov	r0, r6
 8000afc:	f7ff ff93 	bl	8000a26 <__sfputs_r>
 8000b00:	3001      	adds	r0, #1
 8000b02:	f000 80aa 	beq.w	8000c5a <_vfiprintf_r+0x20e>
 8000b06:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000b08:	445a      	add	r2, fp
 8000b0a:	9209      	str	r2, [sp, #36]	; 0x24
 8000b0c:	f89a 3000 	ldrb.w	r3, [sl]
 8000b10:	2b00      	cmp	r3, #0
 8000b12:	f000 80a2 	beq.w	8000c5a <_vfiprintf_r+0x20e>
 8000b16:	2300      	movs	r3, #0
 8000b18:	f04f 32ff 	mov.w	r2, #4294967295
 8000b1c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b20:	f10a 0a01 	add.w	sl, sl, #1
 8000b24:	9304      	str	r3, [sp, #16]
 8000b26:	9307      	str	r3, [sp, #28]
 8000b28:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000b2c:	931a      	str	r3, [sp, #104]	; 0x68
 8000b2e:	4654      	mov	r4, sl
 8000b30:	2205      	movs	r2, #5
 8000b32:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b36:	4858      	ldr	r0, [pc, #352]	; (8000c98 <_vfiprintf_r+0x24c>)
 8000b38:	f7ff fb52 	bl	80001e0 <memchr>
 8000b3c:	9a04      	ldr	r2, [sp, #16]
 8000b3e:	b9d8      	cbnz	r0, 8000b78 <_vfiprintf_r+0x12c>
 8000b40:	06d1      	lsls	r1, r2, #27
 8000b42:	bf44      	itt	mi
 8000b44:	2320      	movmi	r3, #32
 8000b46:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b4a:	0713      	lsls	r3, r2, #28
 8000b4c:	bf44      	itt	mi
 8000b4e:	232b      	movmi	r3, #43	; 0x2b
 8000b50:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b54:	f89a 3000 	ldrb.w	r3, [sl]
 8000b58:	2b2a      	cmp	r3, #42	; 0x2a
 8000b5a:	d015      	beq.n	8000b88 <_vfiprintf_r+0x13c>
 8000b5c:	9a07      	ldr	r2, [sp, #28]
 8000b5e:	4654      	mov	r4, sl
 8000b60:	2000      	movs	r0, #0
 8000b62:	f04f 0c0a 	mov.w	ip, #10
 8000b66:	4621      	mov	r1, r4
 8000b68:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b6c:	3b30      	subs	r3, #48	; 0x30
 8000b6e:	2b09      	cmp	r3, #9
 8000b70:	d94e      	bls.n	8000c10 <_vfiprintf_r+0x1c4>
 8000b72:	b1b0      	cbz	r0, 8000ba2 <_vfiprintf_r+0x156>
 8000b74:	9207      	str	r2, [sp, #28]
 8000b76:	e014      	b.n	8000ba2 <_vfiprintf_r+0x156>
 8000b78:	eba0 0308 	sub.w	r3, r0, r8
 8000b7c:	fa09 f303 	lsl.w	r3, r9, r3
 8000b80:	4313      	orrs	r3, r2
 8000b82:	9304      	str	r3, [sp, #16]
 8000b84:	46a2      	mov	sl, r4
 8000b86:	e7d2      	b.n	8000b2e <_vfiprintf_r+0xe2>
 8000b88:	9b03      	ldr	r3, [sp, #12]
 8000b8a:	1d19      	adds	r1, r3, #4
 8000b8c:	681b      	ldr	r3, [r3, #0]
 8000b8e:	9103      	str	r1, [sp, #12]
 8000b90:	2b00      	cmp	r3, #0
 8000b92:	bfbb      	ittet	lt
 8000b94:	425b      	neglt	r3, r3
 8000b96:	f042 0202 	orrlt.w	r2, r2, #2
 8000b9a:	9307      	strge	r3, [sp, #28]
 8000b9c:	9307      	strlt	r3, [sp, #28]
 8000b9e:	bfb8      	it	lt
 8000ba0:	9204      	strlt	r2, [sp, #16]
 8000ba2:	7823      	ldrb	r3, [r4, #0]
 8000ba4:	2b2e      	cmp	r3, #46	; 0x2e
 8000ba6:	d10c      	bne.n	8000bc2 <_vfiprintf_r+0x176>
 8000ba8:	7863      	ldrb	r3, [r4, #1]
 8000baa:	2b2a      	cmp	r3, #42	; 0x2a
 8000bac:	d135      	bne.n	8000c1a <_vfiprintf_r+0x1ce>
 8000bae:	9b03      	ldr	r3, [sp, #12]
 8000bb0:	1d1a      	adds	r2, r3, #4
 8000bb2:	681b      	ldr	r3, [r3, #0]
 8000bb4:	9203      	str	r2, [sp, #12]
 8000bb6:	2b00      	cmp	r3, #0
 8000bb8:	bfb8      	it	lt
 8000bba:	f04f 33ff 	movlt.w	r3, #4294967295
 8000bbe:	3402      	adds	r4, #2
 8000bc0:	9305      	str	r3, [sp, #20]
 8000bc2:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000ca8 <_vfiprintf_r+0x25c>
 8000bc6:	7821      	ldrb	r1, [r4, #0]
 8000bc8:	2203      	movs	r2, #3
 8000bca:	4650      	mov	r0, sl
 8000bcc:	f7ff fb08 	bl	80001e0 <memchr>
 8000bd0:	b140      	cbz	r0, 8000be4 <_vfiprintf_r+0x198>
 8000bd2:	2340      	movs	r3, #64	; 0x40
 8000bd4:	eba0 000a 	sub.w	r0, r0, sl
 8000bd8:	fa03 f000 	lsl.w	r0, r3, r0
 8000bdc:	9b04      	ldr	r3, [sp, #16]
 8000bde:	4303      	orrs	r3, r0
 8000be0:	3401      	adds	r4, #1
 8000be2:	9304      	str	r3, [sp, #16]
 8000be4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000be8:	482c      	ldr	r0, [pc, #176]	; (8000c9c <_vfiprintf_r+0x250>)
 8000bea:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000bee:	2206      	movs	r2, #6
 8000bf0:	f7ff faf6 	bl	80001e0 <memchr>
 8000bf4:	2800      	cmp	r0, #0
 8000bf6:	d03f      	beq.n	8000c78 <_vfiprintf_r+0x22c>
 8000bf8:	4b29      	ldr	r3, [pc, #164]	; (8000ca0 <_vfiprintf_r+0x254>)
 8000bfa:	bb1b      	cbnz	r3, 8000c44 <_vfiprintf_r+0x1f8>
 8000bfc:	9b03      	ldr	r3, [sp, #12]
 8000bfe:	3307      	adds	r3, #7
 8000c00:	f023 0307 	bic.w	r3, r3, #7
 8000c04:	3308      	adds	r3, #8
 8000c06:	9303      	str	r3, [sp, #12]
 8000c08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000c0a:	443b      	add	r3, r7
 8000c0c:	9309      	str	r3, [sp, #36]	; 0x24
 8000c0e:	e767      	b.n	8000ae0 <_vfiprintf_r+0x94>
 8000c10:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c14:	460c      	mov	r4, r1
 8000c16:	2001      	movs	r0, #1
 8000c18:	e7a5      	b.n	8000b66 <_vfiprintf_r+0x11a>
 8000c1a:	2300      	movs	r3, #0
 8000c1c:	3401      	adds	r4, #1
 8000c1e:	9305      	str	r3, [sp, #20]
 8000c20:	4619      	mov	r1, r3
 8000c22:	f04f 0c0a 	mov.w	ip, #10
 8000c26:	4620      	mov	r0, r4
 8000c28:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c2c:	3a30      	subs	r2, #48	; 0x30
 8000c2e:	2a09      	cmp	r2, #9
 8000c30:	d903      	bls.n	8000c3a <_vfiprintf_r+0x1ee>
 8000c32:	2b00      	cmp	r3, #0
 8000c34:	d0c5      	beq.n	8000bc2 <_vfiprintf_r+0x176>
 8000c36:	9105      	str	r1, [sp, #20]
 8000c38:	e7c3      	b.n	8000bc2 <_vfiprintf_r+0x176>
 8000c3a:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c3e:	4604      	mov	r4, r0
 8000c40:	2301      	movs	r3, #1
 8000c42:	e7f0      	b.n	8000c26 <_vfiprintf_r+0x1da>
 8000c44:	ab03      	add	r3, sp, #12
 8000c46:	9300      	str	r3, [sp, #0]
 8000c48:	462a      	mov	r2, r5
 8000c4a:	4b16      	ldr	r3, [pc, #88]	; (8000ca4 <_vfiprintf_r+0x258>)
 8000c4c:	a904      	add	r1, sp, #16
 8000c4e:	4630      	mov	r0, r6
 8000c50:	f3af 8000 	nop.w
 8000c54:	4607      	mov	r7, r0
 8000c56:	1c78      	adds	r0, r7, #1
 8000c58:	d1d6      	bne.n	8000c08 <_vfiprintf_r+0x1bc>
 8000c5a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c5c:	07d9      	lsls	r1, r3, #31
 8000c5e:	d405      	bmi.n	8000c6c <_vfiprintf_r+0x220>
 8000c60:	89ab      	ldrh	r3, [r5, #12]
 8000c62:	059a      	lsls	r2, r3, #22
 8000c64:	d402      	bmi.n	8000c6c <_vfiprintf_r+0x220>
 8000c66:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c68:	f7ff fe31 	bl	80008ce <__retarget_lock_release_recursive>
 8000c6c:	89ab      	ldrh	r3, [r5, #12]
 8000c6e:	065b      	lsls	r3, r3, #25
 8000c70:	f53f af12 	bmi.w	8000a98 <_vfiprintf_r+0x4c>
 8000c74:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000c76:	e711      	b.n	8000a9c <_vfiprintf_r+0x50>
 8000c78:	ab03      	add	r3, sp, #12
 8000c7a:	9300      	str	r3, [sp, #0]
 8000c7c:	462a      	mov	r2, r5
 8000c7e:	4b09      	ldr	r3, [pc, #36]	; (8000ca4 <_vfiprintf_r+0x258>)
 8000c80:	a904      	add	r1, sp, #16
 8000c82:	4630      	mov	r0, r6
 8000c84:	f000 f880 	bl	8000d88 <_printf_i>
 8000c88:	e7e4      	b.n	8000c54 <_vfiprintf_r+0x208>
 8000c8a:	bf00      	nop
 8000c8c:	08001620 	.word	0x08001620
 8000c90:	08001640 	.word	0x08001640
 8000c94:	08001600 	.word	0x08001600
 8000c98:	08001660 	.word	0x08001660
 8000c9c:	0800166a 	.word	0x0800166a
 8000ca0:	00000000 	.word	0x00000000
 8000ca4:	08000a27 	.word	0x08000a27
 8000ca8:	08001666 	.word	0x08001666

08000cac <_printf_common>:
 8000cac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cb0:	4616      	mov	r6, r2
 8000cb2:	4699      	mov	r9, r3
 8000cb4:	688a      	ldr	r2, [r1, #8]
 8000cb6:	690b      	ldr	r3, [r1, #16]
 8000cb8:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000cbc:	4293      	cmp	r3, r2
 8000cbe:	bfb8      	it	lt
 8000cc0:	4613      	movlt	r3, r2
 8000cc2:	6033      	str	r3, [r6, #0]
 8000cc4:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000cc8:	4607      	mov	r7, r0
 8000cca:	460c      	mov	r4, r1
 8000ccc:	b10a      	cbz	r2, 8000cd2 <_printf_common+0x26>
 8000cce:	3301      	adds	r3, #1
 8000cd0:	6033      	str	r3, [r6, #0]
 8000cd2:	6823      	ldr	r3, [r4, #0]
 8000cd4:	0699      	lsls	r1, r3, #26
 8000cd6:	bf42      	ittt	mi
 8000cd8:	6833      	ldrmi	r3, [r6, #0]
 8000cda:	3302      	addmi	r3, #2
 8000cdc:	6033      	strmi	r3, [r6, #0]
 8000cde:	6825      	ldr	r5, [r4, #0]
 8000ce0:	f015 0506 	ands.w	r5, r5, #6
 8000ce4:	d106      	bne.n	8000cf4 <_printf_common+0x48>
 8000ce6:	f104 0a19 	add.w	sl, r4, #25
 8000cea:	68e3      	ldr	r3, [r4, #12]
 8000cec:	6832      	ldr	r2, [r6, #0]
 8000cee:	1a9b      	subs	r3, r3, r2
 8000cf0:	42ab      	cmp	r3, r5
 8000cf2:	dc26      	bgt.n	8000d42 <_printf_common+0x96>
 8000cf4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000cf8:	1e13      	subs	r3, r2, #0
 8000cfa:	6822      	ldr	r2, [r4, #0]
 8000cfc:	bf18      	it	ne
 8000cfe:	2301      	movne	r3, #1
 8000d00:	0692      	lsls	r2, r2, #26
 8000d02:	d42b      	bmi.n	8000d5c <_printf_common+0xb0>
 8000d04:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000d08:	4649      	mov	r1, r9
 8000d0a:	4638      	mov	r0, r7
 8000d0c:	47c0      	blx	r8
 8000d0e:	3001      	adds	r0, #1
 8000d10:	d01e      	beq.n	8000d50 <_printf_common+0xa4>
 8000d12:	6823      	ldr	r3, [r4, #0]
 8000d14:	68e5      	ldr	r5, [r4, #12]
 8000d16:	6832      	ldr	r2, [r6, #0]
 8000d18:	f003 0306 	and.w	r3, r3, #6
 8000d1c:	2b04      	cmp	r3, #4
 8000d1e:	bf08      	it	eq
 8000d20:	1aad      	subeq	r5, r5, r2
 8000d22:	68a3      	ldr	r3, [r4, #8]
 8000d24:	6922      	ldr	r2, [r4, #16]
 8000d26:	bf0c      	ite	eq
 8000d28:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d2c:	2500      	movne	r5, #0
 8000d2e:	4293      	cmp	r3, r2
 8000d30:	bfc4      	itt	gt
 8000d32:	1a9b      	subgt	r3, r3, r2
 8000d34:	18ed      	addgt	r5, r5, r3
 8000d36:	2600      	movs	r6, #0
 8000d38:	341a      	adds	r4, #26
 8000d3a:	42b5      	cmp	r5, r6
 8000d3c:	d11a      	bne.n	8000d74 <_printf_common+0xc8>
 8000d3e:	2000      	movs	r0, #0
 8000d40:	e008      	b.n	8000d54 <_printf_common+0xa8>
 8000d42:	2301      	movs	r3, #1
 8000d44:	4652      	mov	r2, sl
 8000d46:	4649      	mov	r1, r9
 8000d48:	4638      	mov	r0, r7
 8000d4a:	47c0      	blx	r8
 8000d4c:	3001      	adds	r0, #1
 8000d4e:	d103      	bne.n	8000d58 <_printf_common+0xac>
 8000d50:	f04f 30ff 	mov.w	r0, #4294967295
 8000d54:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d58:	3501      	adds	r5, #1
 8000d5a:	e7c6      	b.n	8000cea <_printf_common+0x3e>
 8000d5c:	18e1      	adds	r1, r4, r3
 8000d5e:	1c5a      	adds	r2, r3, #1
 8000d60:	2030      	movs	r0, #48	; 0x30
 8000d62:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000d66:	4422      	add	r2, r4
 8000d68:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000d6c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000d70:	3302      	adds	r3, #2
 8000d72:	e7c7      	b.n	8000d04 <_printf_common+0x58>
 8000d74:	2301      	movs	r3, #1
 8000d76:	4622      	mov	r2, r4
 8000d78:	4649      	mov	r1, r9
 8000d7a:	4638      	mov	r0, r7
 8000d7c:	47c0      	blx	r8
 8000d7e:	3001      	adds	r0, #1
 8000d80:	d0e6      	beq.n	8000d50 <_printf_common+0xa4>
 8000d82:	3601      	adds	r6, #1
 8000d84:	e7d9      	b.n	8000d3a <_printf_common+0x8e>
	...

08000d88 <_printf_i>:
 8000d88:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d8c:	7e0f      	ldrb	r7, [r1, #24]
 8000d8e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000d90:	2f78      	cmp	r7, #120	; 0x78
 8000d92:	4691      	mov	r9, r2
 8000d94:	4680      	mov	r8, r0
 8000d96:	460c      	mov	r4, r1
 8000d98:	469a      	mov	sl, r3
 8000d9a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000d9e:	d807      	bhi.n	8000db0 <_printf_i+0x28>
 8000da0:	2f62      	cmp	r7, #98	; 0x62
 8000da2:	d80a      	bhi.n	8000dba <_printf_i+0x32>
 8000da4:	2f00      	cmp	r7, #0
 8000da6:	f000 80d8 	beq.w	8000f5a <_printf_i+0x1d2>
 8000daa:	2f58      	cmp	r7, #88	; 0x58
 8000dac:	f000 80a3 	beq.w	8000ef6 <_printf_i+0x16e>
 8000db0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000db4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000db8:	e03a      	b.n	8000e30 <_printf_i+0xa8>
 8000dba:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000dbe:	2b15      	cmp	r3, #21
 8000dc0:	d8f6      	bhi.n	8000db0 <_printf_i+0x28>
 8000dc2:	a101      	add	r1, pc, #4	; (adr r1, 8000dc8 <_printf_i+0x40>)
 8000dc4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000dc8:	08000e21 	.word	0x08000e21
 8000dcc:	08000e35 	.word	0x08000e35
 8000dd0:	08000db1 	.word	0x08000db1
 8000dd4:	08000db1 	.word	0x08000db1
 8000dd8:	08000db1 	.word	0x08000db1
 8000ddc:	08000db1 	.word	0x08000db1
 8000de0:	08000e35 	.word	0x08000e35
 8000de4:	08000db1 	.word	0x08000db1
 8000de8:	08000db1 	.word	0x08000db1
 8000dec:	08000db1 	.word	0x08000db1
 8000df0:	08000db1 	.word	0x08000db1
 8000df4:	08000f41 	.word	0x08000f41
 8000df8:	08000e65 	.word	0x08000e65
 8000dfc:	08000f23 	.word	0x08000f23
 8000e00:	08000db1 	.word	0x08000db1
 8000e04:	08000db1 	.word	0x08000db1
 8000e08:	08000f63 	.word	0x08000f63
 8000e0c:	08000db1 	.word	0x08000db1
 8000e10:	08000e65 	.word	0x08000e65
 8000e14:	08000db1 	.word	0x08000db1
 8000e18:	08000db1 	.word	0x08000db1
 8000e1c:	08000f2b 	.word	0x08000f2b
 8000e20:	682b      	ldr	r3, [r5, #0]
 8000e22:	1d1a      	adds	r2, r3, #4
 8000e24:	681b      	ldr	r3, [r3, #0]
 8000e26:	602a      	str	r2, [r5, #0]
 8000e28:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e2c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e30:	2301      	movs	r3, #1
 8000e32:	e0a3      	b.n	8000f7c <_printf_i+0x1f4>
 8000e34:	6820      	ldr	r0, [r4, #0]
 8000e36:	6829      	ldr	r1, [r5, #0]
 8000e38:	0606      	lsls	r6, r0, #24
 8000e3a:	f101 0304 	add.w	r3, r1, #4
 8000e3e:	d50a      	bpl.n	8000e56 <_printf_i+0xce>
 8000e40:	680e      	ldr	r6, [r1, #0]
 8000e42:	602b      	str	r3, [r5, #0]
 8000e44:	2e00      	cmp	r6, #0
 8000e46:	da03      	bge.n	8000e50 <_printf_i+0xc8>
 8000e48:	232d      	movs	r3, #45	; 0x2d
 8000e4a:	4276      	negs	r6, r6
 8000e4c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e50:	485e      	ldr	r0, [pc, #376]	; (8000fcc <_printf_i+0x244>)
 8000e52:	230a      	movs	r3, #10
 8000e54:	e019      	b.n	8000e8a <_printf_i+0x102>
 8000e56:	680e      	ldr	r6, [r1, #0]
 8000e58:	602b      	str	r3, [r5, #0]
 8000e5a:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000e5e:	bf18      	it	ne
 8000e60:	b236      	sxthne	r6, r6
 8000e62:	e7ef      	b.n	8000e44 <_printf_i+0xbc>
 8000e64:	682b      	ldr	r3, [r5, #0]
 8000e66:	6820      	ldr	r0, [r4, #0]
 8000e68:	1d19      	adds	r1, r3, #4
 8000e6a:	6029      	str	r1, [r5, #0]
 8000e6c:	0601      	lsls	r1, r0, #24
 8000e6e:	d501      	bpl.n	8000e74 <_printf_i+0xec>
 8000e70:	681e      	ldr	r6, [r3, #0]
 8000e72:	e002      	b.n	8000e7a <_printf_i+0xf2>
 8000e74:	0646      	lsls	r6, r0, #25
 8000e76:	d5fb      	bpl.n	8000e70 <_printf_i+0xe8>
 8000e78:	881e      	ldrh	r6, [r3, #0]
 8000e7a:	4854      	ldr	r0, [pc, #336]	; (8000fcc <_printf_i+0x244>)
 8000e7c:	2f6f      	cmp	r7, #111	; 0x6f
 8000e7e:	bf0c      	ite	eq
 8000e80:	2308      	moveq	r3, #8
 8000e82:	230a      	movne	r3, #10
 8000e84:	2100      	movs	r1, #0
 8000e86:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e8a:	6865      	ldr	r5, [r4, #4]
 8000e8c:	60a5      	str	r5, [r4, #8]
 8000e8e:	2d00      	cmp	r5, #0
 8000e90:	bfa2      	ittt	ge
 8000e92:	6821      	ldrge	r1, [r4, #0]
 8000e94:	f021 0104 	bicge.w	r1, r1, #4
 8000e98:	6021      	strge	r1, [r4, #0]
 8000e9a:	b90e      	cbnz	r6, 8000ea0 <_printf_i+0x118>
 8000e9c:	2d00      	cmp	r5, #0
 8000e9e:	d04d      	beq.n	8000f3c <_printf_i+0x1b4>
 8000ea0:	4615      	mov	r5, r2
 8000ea2:	fbb6 f1f3 	udiv	r1, r6, r3
 8000ea6:	fb03 6711 	mls	r7, r3, r1, r6
 8000eaa:	5dc7      	ldrb	r7, [r0, r7]
 8000eac:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000eb0:	4637      	mov	r7, r6
 8000eb2:	42bb      	cmp	r3, r7
 8000eb4:	460e      	mov	r6, r1
 8000eb6:	d9f4      	bls.n	8000ea2 <_printf_i+0x11a>
 8000eb8:	2b08      	cmp	r3, #8
 8000eba:	d10b      	bne.n	8000ed4 <_printf_i+0x14c>
 8000ebc:	6823      	ldr	r3, [r4, #0]
 8000ebe:	07de      	lsls	r6, r3, #31
 8000ec0:	d508      	bpl.n	8000ed4 <_printf_i+0x14c>
 8000ec2:	6923      	ldr	r3, [r4, #16]
 8000ec4:	6861      	ldr	r1, [r4, #4]
 8000ec6:	4299      	cmp	r1, r3
 8000ec8:	bfde      	ittt	le
 8000eca:	2330      	movle	r3, #48	; 0x30
 8000ecc:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000ed0:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000ed4:	1b52      	subs	r2, r2, r5
 8000ed6:	6122      	str	r2, [r4, #16]
 8000ed8:	f8cd a000 	str.w	sl, [sp]
 8000edc:	464b      	mov	r3, r9
 8000ede:	aa03      	add	r2, sp, #12
 8000ee0:	4621      	mov	r1, r4
 8000ee2:	4640      	mov	r0, r8
 8000ee4:	f7ff fee2 	bl	8000cac <_printf_common>
 8000ee8:	3001      	adds	r0, #1
 8000eea:	d14c      	bne.n	8000f86 <_printf_i+0x1fe>
 8000eec:	f04f 30ff 	mov.w	r0, #4294967295
 8000ef0:	b004      	add	sp, #16
 8000ef2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ef6:	4835      	ldr	r0, [pc, #212]	; (8000fcc <_printf_i+0x244>)
 8000ef8:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000efc:	6829      	ldr	r1, [r5, #0]
 8000efe:	6823      	ldr	r3, [r4, #0]
 8000f00:	f851 6b04 	ldr.w	r6, [r1], #4
 8000f04:	6029      	str	r1, [r5, #0]
 8000f06:	061d      	lsls	r5, r3, #24
 8000f08:	d514      	bpl.n	8000f34 <_printf_i+0x1ac>
 8000f0a:	07df      	lsls	r7, r3, #31
 8000f0c:	bf44      	itt	mi
 8000f0e:	f043 0320 	orrmi.w	r3, r3, #32
 8000f12:	6023      	strmi	r3, [r4, #0]
 8000f14:	b91e      	cbnz	r6, 8000f1e <_printf_i+0x196>
 8000f16:	6823      	ldr	r3, [r4, #0]
 8000f18:	f023 0320 	bic.w	r3, r3, #32
 8000f1c:	6023      	str	r3, [r4, #0]
 8000f1e:	2310      	movs	r3, #16
 8000f20:	e7b0      	b.n	8000e84 <_printf_i+0xfc>
 8000f22:	6823      	ldr	r3, [r4, #0]
 8000f24:	f043 0320 	orr.w	r3, r3, #32
 8000f28:	6023      	str	r3, [r4, #0]
 8000f2a:	2378      	movs	r3, #120	; 0x78
 8000f2c:	4828      	ldr	r0, [pc, #160]	; (8000fd0 <_printf_i+0x248>)
 8000f2e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000f32:	e7e3      	b.n	8000efc <_printf_i+0x174>
 8000f34:	0659      	lsls	r1, r3, #25
 8000f36:	bf48      	it	mi
 8000f38:	b2b6      	uxthmi	r6, r6
 8000f3a:	e7e6      	b.n	8000f0a <_printf_i+0x182>
 8000f3c:	4615      	mov	r5, r2
 8000f3e:	e7bb      	b.n	8000eb8 <_printf_i+0x130>
 8000f40:	682b      	ldr	r3, [r5, #0]
 8000f42:	6826      	ldr	r6, [r4, #0]
 8000f44:	6961      	ldr	r1, [r4, #20]
 8000f46:	1d18      	adds	r0, r3, #4
 8000f48:	6028      	str	r0, [r5, #0]
 8000f4a:	0635      	lsls	r5, r6, #24
 8000f4c:	681b      	ldr	r3, [r3, #0]
 8000f4e:	d501      	bpl.n	8000f54 <_printf_i+0x1cc>
 8000f50:	6019      	str	r1, [r3, #0]
 8000f52:	e002      	b.n	8000f5a <_printf_i+0x1d2>
 8000f54:	0670      	lsls	r0, r6, #25
 8000f56:	d5fb      	bpl.n	8000f50 <_printf_i+0x1c8>
 8000f58:	8019      	strh	r1, [r3, #0]
 8000f5a:	2300      	movs	r3, #0
 8000f5c:	6123      	str	r3, [r4, #16]
 8000f5e:	4615      	mov	r5, r2
 8000f60:	e7ba      	b.n	8000ed8 <_printf_i+0x150>
 8000f62:	682b      	ldr	r3, [r5, #0]
 8000f64:	1d1a      	adds	r2, r3, #4
 8000f66:	602a      	str	r2, [r5, #0]
 8000f68:	681d      	ldr	r5, [r3, #0]
 8000f6a:	6862      	ldr	r2, [r4, #4]
 8000f6c:	2100      	movs	r1, #0
 8000f6e:	4628      	mov	r0, r5
 8000f70:	f7ff f936 	bl	80001e0 <memchr>
 8000f74:	b108      	cbz	r0, 8000f7a <_printf_i+0x1f2>
 8000f76:	1b40      	subs	r0, r0, r5
 8000f78:	6060      	str	r0, [r4, #4]
 8000f7a:	6863      	ldr	r3, [r4, #4]
 8000f7c:	6123      	str	r3, [r4, #16]
 8000f7e:	2300      	movs	r3, #0
 8000f80:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f84:	e7a8      	b.n	8000ed8 <_printf_i+0x150>
 8000f86:	6923      	ldr	r3, [r4, #16]
 8000f88:	462a      	mov	r2, r5
 8000f8a:	4649      	mov	r1, r9
 8000f8c:	4640      	mov	r0, r8
 8000f8e:	47d0      	blx	sl
 8000f90:	3001      	adds	r0, #1
 8000f92:	d0ab      	beq.n	8000eec <_printf_i+0x164>
 8000f94:	6823      	ldr	r3, [r4, #0]
 8000f96:	079b      	lsls	r3, r3, #30
 8000f98:	d413      	bmi.n	8000fc2 <_printf_i+0x23a>
 8000f9a:	68e0      	ldr	r0, [r4, #12]
 8000f9c:	9b03      	ldr	r3, [sp, #12]
 8000f9e:	4298      	cmp	r0, r3
 8000fa0:	bfb8      	it	lt
 8000fa2:	4618      	movlt	r0, r3
 8000fa4:	e7a4      	b.n	8000ef0 <_printf_i+0x168>
 8000fa6:	2301      	movs	r3, #1
 8000fa8:	4632      	mov	r2, r6
 8000faa:	4649      	mov	r1, r9
 8000fac:	4640      	mov	r0, r8
 8000fae:	47d0      	blx	sl
 8000fb0:	3001      	adds	r0, #1
 8000fb2:	d09b      	beq.n	8000eec <_printf_i+0x164>
 8000fb4:	3501      	adds	r5, #1
 8000fb6:	68e3      	ldr	r3, [r4, #12]
 8000fb8:	9903      	ldr	r1, [sp, #12]
 8000fba:	1a5b      	subs	r3, r3, r1
 8000fbc:	42ab      	cmp	r3, r5
 8000fbe:	dcf2      	bgt.n	8000fa6 <_printf_i+0x21e>
 8000fc0:	e7eb      	b.n	8000f9a <_printf_i+0x212>
 8000fc2:	2500      	movs	r5, #0
 8000fc4:	f104 0619 	add.w	r6, r4, #25
 8000fc8:	e7f5      	b.n	8000fb6 <_printf_i+0x22e>
 8000fca:	bf00      	nop
 8000fcc:	08001671 	.word	0x08001671
 8000fd0:	08001682 	.word	0x08001682

08000fd4 <_sbrk_r>:
 8000fd4:	b538      	push	{r3, r4, r5, lr}
 8000fd6:	4d06      	ldr	r5, [pc, #24]	; (8000ff0 <_sbrk_r+0x1c>)
 8000fd8:	2300      	movs	r3, #0
 8000fda:	4604      	mov	r4, r0
 8000fdc:	4608      	mov	r0, r1
 8000fde:	602b      	str	r3, [r5, #0]
 8000fe0:	f7ff f9f4 	bl	80003cc <_sbrk>
 8000fe4:	1c43      	adds	r3, r0, #1
 8000fe6:	d102      	bne.n	8000fee <_sbrk_r+0x1a>
 8000fe8:	682b      	ldr	r3, [r5, #0]
 8000fea:	b103      	cbz	r3, 8000fee <_sbrk_r+0x1a>
 8000fec:	6023      	str	r3, [r4, #0]
 8000fee:	bd38      	pop	{r3, r4, r5, pc}
 8000ff0:	20000090 	.word	0x20000090

08000ff4 <__sread>:
 8000ff4:	b510      	push	{r4, lr}
 8000ff6:	460c      	mov	r4, r1
 8000ff8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ffc:	f000 fab2 	bl	8001564 <_read_r>
 8001000:	2800      	cmp	r0, #0
 8001002:	bfab      	itete	ge
 8001004:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001006:	89a3      	ldrhlt	r3, [r4, #12]
 8001008:	181b      	addge	r3, r3, r0
 800100a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800100e:	bfac      	ite	ge
 8001010:	6563      	strge	r3, [r4, #84]	; 0x54
 8001012:	81a3      	strhlt	r3, [r4, #12]
 8001014:	bd10      	pop	{r4, pc}

08001016 <__swrite>:
 8001016:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800101a:	461f      	mov	r7, r3
 800101c:	898b      	ldrh	r3, [r1, #12]
 800101e:	05db      	lsls	r3, r3, #23
 8001020:	4605      	mov	r5, r0
 8001022:	460c      	mov	r4, r1
 8001024:	4616      	mov	r6, r2
 8001026:	d505      	bpl.n	8001034 <__swrite+0x1e>
 8001028:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800102c:	2302      	movs	r3, #2
 800102e:	2200      	movs	r2, #0
 8001030:	f000 f9c8 	bl	80013c4 <_lseek_r>
 8001034:	89a3      	ldrh	r3, [r4, #12]
 8001036:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800103a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800103e:	81a3      	strh	r3, [r4, #12]
 8001040:	4632      	mov	r2, r6
 8001042:	463b      	mov	r3, r7
 8001044:	4628      	mov	r0, r5
 8001046:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800104a:	f000 b869 	b.w	8001120 <_write_r>

0800104e <__sseek>:
 800104e:	b510      	push	{r4, lr}
 8001050:	460c      	mov	r4, r1
 8001052:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001056:	f000 f9b5 	bl	80013c4 <_lseek_r>
 800105a:	1c43      	adds	r3, r0, #1
 800105c:	89a3      	ldrh	r3, [r4, #12]
 800105e:	bf15      	itete	ne
 8001060:	6560      	strne	r0, [r4, #84]	; 0x54
 8001062:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001066:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800106a:	81a3      	strheq	r3, [r4, #12]
 800106c:	bf18      	it	ne
 800106e:	81a3      	strhne	r3, [r4, #12]
 8001070:	bd10      	pop	{r4, pc}

08001072 <__sclose>:
 8001072:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001076:	f000 b8d3 	b.w	8001220 <_close_r>
	...

0800107c <__swbuf_r>:
 800107c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800107e:	460e      	mov	r6, r1
 8001080:	4614      	mov	r4, r2
 8001082:	4605      	mov	r5, r0
 8001084:	b118      	cbz	r0, 800108e <__swbuf_r+0x12>
 8001086:	6983      	ldr	r3, [r0, #24]
 8001088:	b90b      	cbnz	r3, 800108e <__swbuf_r+0x12>
 800108a:	f7ff fb81 	bl	8000790 <__sinit>
 800108e:	4b21      	ldr	r3, [pc, #132]	; (8001114 <__swbuf_r+0x98>)
 8001090:	429c      	cmp	r4, r3
 8001092:	d12b      	bne.n	80010ec <__swbuf_r+0x70>
 8001094:	686c      	ldr	r4, [r5, #4]
 8001096:	69a3      	ldr	r3, [r4, #24]
 8001098:	60a3      	str	r3, [r4, #8]
 800109a:	89a3      	ldrh	r3, [r4, #12]
 800109c:	071a      	lsls	r2, r3, #28
 800109e:	d52f      	bpl.n	8001100 <__swbuf_r+0x84>
 80010a0:	6923      	ldr	r3, [r4, #16]
 80010a2:	b36b      	cbz	r3, 8001100 <__swbuf_r+0x84>
 80010a4:	6923      	ldr	r3, [r4, #16]
 80010a6:	6820      	ldr	r0, [r4, #0]
 80010a8:	1ac0      	subs	r0, r0, r3
 80010aa:	6963      	ldr	r3, [r4, #20]
 80010ac:	b2f6      	uxtb	r6, r6
 80010ae:	4283      	cmp	r3, r0
 80010b0:	4637      	mov	r7, r6
 80010b2:	dc04      	bgt.n	80010be <__swbuf_r+0x42>
 80010b4:	4621      	mov	r1, r4
 80010b6:	4628      	mov	r0, r5
 80010b8:	f000 f948 	bl	800134c <_fflush_r>
 80010bc:	bb30      	cbnz	r0, 800110c <__swbuf_r+0x90>
 80010be:	68a3      	ldr	r3, [r4, #8]
 80010c0:	3b01      	subs	r3, #1
 80010c2:	60a3      	str	r3, [r4, #8]
 80010c4:	6823      	ldr	r3, [r4, #0]
 80010c6:	1c5a      	adds	r2, r3, #1
 80010c8:	6022      	str	r2, [r4, #0]
 80010ca:	701e      	strb	r6, [r3, #0]
 80010cc:	6963      	ldr	r3, [r4, #20]
 80010ce:	3001      	adds	r0, #1
 80010d0:	4283      	cmp	r3, r0
 80010d2:	d004      	beq.n	80010de <__swbuf_r+0x62>
 80010d4:	89a3      	ldrh	r3, [r4, #12]
 80010d6:	07db      	lsls	r3, r3, #31
 80010d8:	d506      	bpl.n	80010e8 <__swbuf_r+0x6c>
 80010da:	2e0a      	cmp	r6, #10
 80010dc:	d104      	bne.n	80010e8 <__swbuf_r+0x6c>
 80010de:	4621      	mov	r1, r4
 80010e0:	4628      	mov	r0, r5
 80010e2:	f000 f933 	bl	800134c <_fflush_r>
 80010e6:	b988      	cbnz	r0, 800110c <__swbuf_r+0x90>
 80010e8:	4638      	mov	r0, r7
 80010ea:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010ec:	4b0a      	ldr	r3, [pc, #40]	; (8001118 <__swbuf_r+0x9c>)
 80010ee:	429c      	cmp	r4, r3
 80010f0:	d101      	bne.n	80010f6 <__swbuf_r+0x7a>
 80010f2:	68ac      	ldr	r4, [r5, #8]
 80010f4:	e7cf      	b.n	8001096 <__swbuf_r+0x1a>
 80010f6:	4b09      	ldr	r3, [pc, #36]	; (800111c <__swbuf_r+0xa0>)
 80010f8:	429c      	cmp	r4, r3
 80010fa:	bf08      	it	eq
 80010fc:	68ec      	ldreq	r4, [r5, #12]
 80010fe:	e7ca      	b.n	8001096 <__swbuf_r+0x1a>
 8001100:	4621      	mov	r1, r4
 8001102:	4628      	mov	r0, r5
 8001104:	f000 f81e 	bl	8001144 <__swsetup_r>
 8001108:	2800      	cmp	r0, #0
 800110a:	d0cb      	beq.n	80010a4 <__swbuf_r+0x28>
 800110c:	f04f 37ff 	mov.w	r7, #4294967295
 8001110:	e7ea      	b.n	80010e8 <__swbuf_r+0x6c>
 8001112:	bf00      	nop
 8001114:	08001620 	.word	0x08001620
 8001118:	08001640 	.word	0x08001640
 800111c:	08001600 	.word	0x08001600

08001120 <_write_r>:
 8001120:	b538      	push	{r3, r4, r5, lr}
 8001122:	4d07      	ldr	r5, [pc, #28]	; (8001140 <_write_r+0x20>)
 8001124:	4604      	mov	r4, r0
 8001126:	4608      	mov	r0, r1
 8001128:	4611      	mov	r1, r2
 800112a:	2200      	movs	r2, #0
 800112c:	602a      	str	r2, [r5, #0]
 800112e:	461a      	mov	r2, r3
 8001130:	f7ff f8fb 	bl	800032a <_write>
 8001134:	1c43      	adds	r3, r0, #1
 8001136:	d102      	bne.n	800113e <_write_r+0x1e>
 8001138:	682b      	ldr	r3, [r5, #0]
 800113a:	b103      	cbz	r3, 800113e <_write_r+0x1e>
 800113c:	6023      	str	r3, [r4, #0]
 800113e:	bd38      	pop	{r3, r4, r5, pc}
 8001140:	20000090 	.word	0x20000090

08001144 <__swsetup_r>:
 8001144:	4b32      	ldr	r3, [pc, #200]	; (8001210 <__swsetup_r+0xcc>)
 8001146:	b570      	push	{r4, r5, r6, lr}
 8001148:	681d      	ldr	r5, [r3, #0]
 800114a:	4606      	mov	r6, r0
 800114c:	460c      	mov	r4, r1
 800114e:	b125      	cbz	r5, 800115a <__swsetup_r+0x16>
 8001150:	69ab      	ldr	r3, [r5, #24]
 8001152:	b913      	cbnz	r3, 800115a <__swsetup_r+0x16>
 8001154:	4628      	mov	r0, r5
 8001156:	f7ff fb1b 	bl	8000790 <__sinit>
 800115a:	4b2e      	ldr	r3, [pc, #184]	; (8001214 <__swsetup_r+0xd0>)
 800115c:	429c      	cmp	r4, r3
 800115e:	d10f      	bne.n	8001180 <__swsetup_r+0x3c>
 8001160:	686c      	ldr	r4, [r5, #4]
 8001162:	89a3      	ldrh	r3, [r4, #12]
 8001164:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001168:	0719      	lsls	r1, r3, #28
 800116a:	d42c      	bmi.n	80011c6 <__swsetup_r+0x82>
 800116c:	06dd      	lsls	r5, r3, #27
 800116e:	d411      	bmi.n	8001194 <__swsetup_r+0x50>
 8001170:	2309      	movs	r3, #9
 8001172:	6033      	str	r3, [r6, #0]
 8001174:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001178:	81a3      	strh	r3, [r4, #12]
 800117a:	f04f 30ff 	mov.w	r0, #4294967295
 800117e:	e03e      	b.n	80011fe <__swsetup_r+0xba>
 8001180:	4b25      	ldr	r3, [pc, #148]	; (8001218 <__swsetup_r+0xd4>)
 8001182:	429c      	cmp	r4, r3
 8001184:	d101      	bne.n	800118a <__swsetup_r+0x46>
 8001186:	68ac      	ldr	r4, [r5, #8]
 8001188:	e7eb      	b.n	8001162 <__swsetup_r+0x1e>
 800118a:	4b24      	ldr	r3, [pc, #144]	; (800121c <__swsetup_r+0xd8>)
 800118c:	429c      	cmp	r4, r3
 800118e:	bf08      	it	eq
 8001190:	68ec      	ldreq	r4, [r5, #12]
 8001192:	e7e6      	b.n	8001162 <__swsetup_r+0x1e>
 8001194:	0758      	lsls	r0, r3, #29
 8001196:	d512      	bpl.n	80011be <__swsetup_r+0x7a>
 8001198:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800119a:	b141      	cbz	r1, 80011ae <__swsetup_r+0x6a>
 800119c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80011a0:	4299      	cmp	r1, r3
 80011a2:	d002      	beq.n	80011aa <__swsetup_r+0x66>
 80011a4:	4630      	mov	r0, r6
 80011a6:	f000 f991 	bl	80014cc <_free_r>
 80011aa:	2300      	movs	r3, #0
 80011ac:	6363      	str	r3, [r4, #52]	; 0x34
 80011ae:	89a3      	ldrh	r3, [r4, #12]
 80011b0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80011b4:	81a3      	strh	r3, [r4, #12]
 80011b6:	2300      	movs	r3, #0
 80011b8:	6063      	str	r3, [r4, #4]
 80011ba:	6923      	ldr	r3, [r4, #16]
 80011bc:	6023      	str	r3, [r4, #0]
 80011be:	89a3      	ldrh	r3, [r4, #12]
 80011c0:	f043 0308 	orr.w	r3, r3, #8
 80011c4:	81a3      	strh	r3, [r4, #12]
 80011c6:	6923      	ldr	r3, [r4, #16]
 80011c8:	b94b      	cbnz	r3, 80011de <__swsetup_r+0x9a>
 80011ca:	89a3      	ldrh	r3, [r4, #12]
 80011cc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80011d0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80011d4:	d003      	beq.n	80011de <__swsetup_r+0x9a>
 80011d6:	4621      	mov	r1, r4
 80011d8:	4630      	mov	r0, r6
 80011da:	f000 f92b 	bl	8001434 <__smakebuf_r>
 80011de:	89a0      	ldrh	r0, [r4, #12]
 80011e0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011e4:	f010 0301 	ands.w	r3, r0, #1
 80011e8:	d00a      	beq.n	8001200 <__swsetup_r+0xbc>
 80011ea:	2300      	movs	r3, #0
 80011ec:	60a3      	str	r3, [r4, #8]
 80011ee:	6963      	ldr	r3, [r4, #20]
 80011f0:	425b      	negs	r3, r3
 80011f2:	61a3      	str	r3, [r4, #24]
 80011f4:	6923      	ldr	r3, [r4, #16]
 80011f6:	b943      	cbnz	r3, 800120a <__swsetup_r+0xc6>
 80011f8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80011fc:	d1ba      	bne.n	8001174 <__swsetup_r+0x30>
 80011fe:	bd70      	pop	{r4, r5, r6, pc}
 8001200:	0781      	lsls	r1, r0, #30
 8001202:	bf58      	it	pl
 8001204:	6963      	ldrpl	r3, [r4, #20]
 8001206:	60a3      	str	r3, [r4, #8]
 8001208:	e7f4      	b.n	80011f4 <__swsetup_r+0xb0>
 800120a:	2000      	movs	r0, #0
 800120c:	e7f7      	b.n	80011fe <__swsetup_r+0xba>
 800120e:	bf00      	nop
 8001210:	20000000 	.word	0x20000000
 8001214:	08001620 	.word	0x08001620
 8001218:	08001640 	.word	0x08001640
 800121c:	08001600 	.word	0x08001600

08001220 <_close_r>:
 8001220:	b538      	push	{r3, r4, r5, lr}
 8001222:	4d06      	ldr	r5, [pc, #24]	; (800123c <_close_r+0x1c>)
 8001224:	2300      	movs	r3, #0
 8001226:	4604      	mov	r4, r0
 8001228:	4608      	mov	r0, r1
 800122a:	602b      	str	r3, [r5, #0]
 800122c:	f7ff f899 	bl	8000362 <_close>
 8001230:	1c43      	adds	r3, r0, #1
 8001232:	d102      	bne.n	800123a <_close_r+0x1a>
 8001234:	682b      	ldr	r3, [r5, #0]
 8001236:	b103      	cbz	r3, 800123a <_close_r+0x1a>
 8001238:	6023      	str	r3, [r4, #0]
 800123a:	bd38      	pop	{r3, r4, r5, pc}
 800123c:	20000090 	.word	0x20000090

08001240 <__sflush_r>:
 8001240:	898a      	ldrh	r2, [r1, #12]
 8001242:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001246:	4605      	mov	r5, r0
 8001248:	0710      	lsls	r0, r2, #28
 800124a:	460c      	mov	r4, r1
 800124c:	d458      	bmi.n	8001300 <__sflush_r+0xc0>
 800124e:	684b      	ldr	r3, [r1, #4]
 8001250:	2b00      	cmp	r3, #0
 8001252:	dc05      	bgt.n	8001260 <__sflush_r+0x20>
 8001254:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001256:	2b00      	cmp	r3, #0
 8001258:	dc02      	bgt.n	8001260 <__sflush_r+0x20>
 800125a:	2000      	movs	r0, #0
 800125c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001260:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001262:	2e00      	cmp	r6, #0
 8001264:	d0f9      	beq.n	800125a <__sflush_r+0x1a>
 8001266:	2300      	movs	r3, #0
 8001268:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800126c:	682f      	ldr	r7, [r5, #0]
 800126e:	602b      	str	r3, [r5, #0]
 8001270:	d032      	beq.n	80012d8 <__sflush_r+0x98>
 8001272:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001274:	89a3      	ldrh	r3, [r4, #12]
 8001276:	075a      	lsls	r2, r3, #29
 8001278:	d505      	bpl.n	8001286 <__sflush_r+0x46>
 800127a:	6863      	ldr	r3, [r4, #4]
 800127c:	1ac0      	subs	r0, r0, r3
 800127e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001280:	b10b      	cbz	r3, 8001286 <__sflush_r+0x46>
 8001282:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001284:	1ac0      	subs	r0, r0, r3
 8001286:	2300      	movs	r3, #0
 8001288:	4602      	mov	r2, r0
 800128a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800128c:	6a21      	ldr	r1, [r4, #32]
 800128e:	4628      	mov	r0, r5
 8001290:	47b0      	blx	r6
 8001292:	1c43      	adds	r3, r0, #1
 8001294:	89a3      	ldrh	r3, [r4, #12]
 8001296:	d106      	bne.n	80012a6 <__sflush_r+0x66>
 8001298:	6829      	ldr	r1, [r5, #0]
 800129a:	291d      	cmp	r1, #29
 800129c:	d82c      	bhi.n	80012f8 <__sflush_r+0xb8>
 800129e:	4a2a      	ldr	r2, [pc, #168]	; (8001348 <__sflush_r+0x108>)
 80012a0:	40ca      	lsrs	r2, r1
 80012a2:	07d6      	lsls	r6, r2, #31
 80012a4:	d528      	bpl.n	80012f8 <__sflush_r+0xb8>
 80012a6:	2200      	movs	r2, #0
 80012a8:	6062      	str	r2, [r4, #4]
 80012aa:	04d9      	lsls	r1, r3, #19
 80012ac:	6922      	ldr	r2, [r4, #16]
 80012ae:	6022      	str	r2, [r4, #0]
 80012b0:	d504      	bpl.n	80012bc <__sflush_r+0x7c>
 80012b2:	1c42      	adds	r2, r0, #1
 80012b4:	d101      	bne.n	80012ba <__sflush_r+0x7a>
 80012b6:	682b      	ldr	r3, [r5, #0]
 80012b8:	b903      	cbnz	r3, 80012bc <__sflush_r+0x7c>
 80012ba:	6560      	str	r0, [r4, #84]	; 0x54
 80012bc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80012be:	602f      	str	r7, [r5, #0]
 80012c0:	2900      	cmp	r1, #0
 80012c2:	d0ca      	beq.n	800125a <__sflush_r+0x1a>
 80012c4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80012c8:	4299      	cmp	r1, r3
 80012ca:	d002      	beq.n	80012d2 <__sflush_r+0x92>
 80012cc:	4628      	mov	r0, r5
 80012ce:	f000 f8fd 	bl	80014cc <_free_r>
 80012d2:	2000      	movs	r0, #0
 80012d4:	6360      	str	r0, [r4, #52]	; 0x34
 80012d6:	e7c1      	b.n	800125c <__sflush_r+0x1c>
 80012d8:	6a21      	ldr	r1, [r4, #32]
 80012da:	2301      	movs	r3, #1
 80012dc:	4628      	mov	r0, r5
 80012de:	47b0      	blx	r6
 80012e0:	1c41      	adds	r1, r0, #1
 80012e2:	d1c7      	bne.n	8001274 <__sflush_r+0x34>
 80012e4:	682b      	ldr	r3, [r5, #0]
 80012e6:	2b00      	cmp	r3, #0
 80012e8:	d0c4      	beq.n	8001274 <__sflush_r+0x34>
 80012ea:	2b1d      	cmp	r3, #29
 80012ec:	d001      	beq.n	80012f2 <__sflush_r+0xb2>
 80012ee:	2b16      	cmp	r3, #22
 80012f0:	d101      	bne.n	80012f6 <__sflush_r+0xb6>
 80012f2:	602f      	str	r7, [r5, #0]
 80012f4:	e7b1      	b.n	800125a <__sflush_r+0x1a>
 80012f6:	89a3      	ldrh	r3, [r4, #12]
 80012f8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012fc:	81a3      	strh	r3, [r4, #12]
 80012fe:	e7ad      	b.n	800125c <__sflush_r+0x1c>
 8001300:	690f      	ldr	r7, [r1, #16]
 8001302:	2f00      	cmp	r7, #0
 8001304:	d0a9      	beq.n	800125a <__sflush_r+0x1a>
 8001306:	0793      	lsls	r3, r2, #30
 8001308:	680e      	ldr	r6, [r1, #0]
 800130a:	bf08      	it	eq
 800130c:	694b      	ldreq	r3, [r1, #20]
 800130e:	600f      	str	r7, [r1, #0]
 8001310:	bf18      	it	ne
 8001312:	2300      	movne	r3, #0
 8001314:	eba6 0807 	sub.w	r8, r6, r7
 8001318:	608b      	str	r3, [r1, #8]
 800131a:	f1b8 0f00 	cmp.w	r8, #0
 800131e:	dd9c      	ble.n	800125a <__sflush_r+0x1a>
 8001320:	6a21      	ldr	r1, [r4, #32]
 8001322:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8001324:	4643      	mov	r3, r8
 8001326:	463a      	mov	r2, r7
 8001328:	4628      	mov	r0, r5
 800132a:	47b0      	blx	r6
 800132c:	2800      	cmp	r0, #0
 800132e:	dc06      	bgt.n	800133e <__sflush_r+0xfe>
 8001330:	89a3      	ldrh	r3, [r4, #12]
 8001332:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8001336:	81a3      	strh	r3, [r4, #12]
 8001338:	f04f 30ff 	mov.w	r0, #4294967295
 800133c:	e78e      	b.n	800125c <__sflush_r+0x1c>
 800133e:	4407      	add	r7, r0
 8001340:	eba8 0800 	sub.w	r8, r8, r0
 8001344:	e7e9      	b.n	800131a <__sflush_r+0xda>
 8001346:	bf00      	nop
 8001348:	20400001 	.word	0x20400001

0800134c <_fflush_r>:
 800134c:	b538      	push	{r3, r4, r5, lr}
 800134e:	690b      	ldr	r3, [r1, #16]
 8001350:	4605      	mov	r5, r0
 8001352:	460c      	mov	r4, r1
 8001354:	b913      	cbnz	r3, 800135c <_fflush_r+0x10>
 8001356:	2500      	movs	r5, #0
 8001358:	4628      	mov	r0, r5
 800135a:	bd38      	pop	{r3, r4, r5, pc}
 800135c:	b118      	cbz	r0, 8001366 <_fflush_r+0x1a>
 800135e:	6983      	ldr	r3, [r0, #24]
 8001360:	b90b      	cbnz	r3, 8001366 <_fflush_r+0x1a>
 8001362:	f7ff fa15 	bl	8000790 <__sinit>
 8001366:	4b14      	ldr	r3, [pc, #80]	; (80013b8 <_fflush_r+0x6c>)
 8001368:	429c      	cmp	r4, r3
 800136a:	d11b      	bne.n	80013a4 <_fflush_r+0x58>
 800136c:	686c      	ldr	r4, [r5, #4]
 800136e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001372:	2b00      	cmp	r3, #0
 8001374:	d0ef      	beq.n	8001356 <_fflush_r+0xa>
 8001376:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001378:	07d0      	lsls	r0, r2, #31
 800137a:	d404      	bmi.n	8001386 <_fflush_r+0x3a>
 800137c:	0599      	lsls	r1, r3, #22
 800137e:	d402      	bmi.n	8001386 <_fflush_r+0x3a>
 8001380:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001382:	f7ff faa3 	bl	80008cc <__retarget_lock_acquire_recursive>
 8001386:	4628      	mov	r0, r5
 8001388:	4621      	mov	r1, r4
 800138a:	f7ff ff59 	bl	8001240 <__sflush_r>
 800138e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001390:	07da      	lsls	r2, r3, #31
 8001392:	4605      	mov	r5, r0
 8001394:	d4e0      	bmi.n	8001358 <_fflush_r+0xc>
 8001396:	89a3      	ldrh	r3, [r4, #12]
 8001398:	059b      	lsls	r3, r3, #22
 800139a:	d4dd      	bmi.n	8001358 <_fflush_r+0xc>
 800139c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800139e:	f7ff fa96 	bl	80008ce <__retarget_lock_release_recursive>
 80013a2:	e7d9      	b.n	8001358 <_fflush_r+0xc>
 80013a4:	4b05      	ldr	r3, [pc, #20]	; (80013bc <_fflush_r+0x70>)
 80013a6:	429c      	cmp	r4, r3
 80013a8:	d101      	bne.n	80013ae <_fflush_r+0x62>
 80013aa:	68ac      	ldr	r4, [r5, #8]
 80013ac:	e7df      	b.n	800136e <_fflush_r+0x22>
 80013ae:	4b04      	ldr	r3, [pc, #16]	; (80013c0 <_fflush_r+0x74>)
 80013b0:	429c      	cmp	r4, r3
 80013b2:	bf08      	it	eq
 80013b4:	68ec      	ldreq	r4, [r5, #12]
 80013b6:	e7da      	b.n	800136e <_fflush_r+0x22>
 80013b8:	08001620 	.word	0x08001620
 80013bc:	08001640 	.word	0x08001640
 80013c0:	08001600 	.word	0x08001600

080013c4 <_lseek_r>:
 80013c4:	b538      	push	{r3, r4, r5, lr}
 80013c6:	4d07      	ldr	r5, [pc, #28]	; (80013e4 <_lseek_r+0x20>)
 80013c8:	4604      	mov	r4, r0
 80013ca:	4608      	mov	r0, r1
 80013cc:	4611      	mov	r1, r2
 80013ce:	2200      	movs	r2, #0
 80013d0:	602a      	str	r2, [r5, #0]
 80013d2:	461a      	mov	r2, r3
 80013d4:	f7fe ffec 	bl	80003b0 <_lseek>
 80013d8:	1c43      	adds	r3, r0, #1
 80013da:	d102      	bne.n	80013e2 <_lseek_r+0x1e>
 80013dc:	682b      	ldr	r3, [r5, #0]
 80013de:	b103      	cbz	r3, 80013e2 <_lseek_r+0x1e>
 80013e0:	6023      	str	r3, [r4, #0]
 80013e2:	bd38      	pop	{r3, r4, r5, pc}
 80013e4:	20000090 	.word	0x20000090

080013e8 <__swhatbuf_r>:
 80013e8:	b570      	push	{r4, r5, r6, lr}
 80013ea:	460e      	mov	r6, r1
 80013ec:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013f0:	2900      	cmp	r1, #0
 80013f2:	b096      	sub	sp, #88	; 0x58
 80013f4:	4614      	mov	r4, r2
 80013f6:	461d      	mov	r5, r3
 80013f8:	da08      	bge.n	800140c <__swhatbuf_r+0x24>
 80013fa:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80013fe:	2200      	movs	r2, #0
 8001400:	602a      	str	r2, [r5, #0]
 8001402:	061a      	lsls	r2, r3, #24
 8001404:	d410      	bmi.n	8001428 <__swhatbuf_r+0x40>
 8001406:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800140a:	e00e      	b.n	800142a <__swhatbuf_r+0x42>
 800140c:	466a      	mov	r2, sp
 800140e:	f000 f8bb 	bl	8001588 <_fstat_r>
 8001412:	2800      	cmp	r0, #0
 8001414:	dbf1      	blt.n	80013fa <__swhatbuf_r+0x12>
 8001416:	9a01      	ldr	r2, [sp, #4]
 8001418:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800141c:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001420:	425a      	negs	r2, r3
 8001422:	415a      	adcs	r2, r3
 8001424:	602a      	str	r2, [r5, #0]
 8001426:	e7ee      	b.n	8001406 <__swhatbuf_r+0x1e>
 8001428:	2340      	movs	r3, #64	; 0x40
 800142a:	2000      	movs	r0, #0
 800142c:	6023      	str	r3, [r4, #0]
 800142e:	b016      	add	sp, #88	; 0x58
 8001430:	bd70      	pop	{r4, r5, r6, pc}
	...

08001434 <__smakebuf_r>:
 8001434:	898b      	ldrh	r3, [r1, #12]
 8001436:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001438:	079d      	lsls	r5, r3, #30
 800143a:	4606      	mov	r6, r0
 800143c:	460c      	mov	r4, r1
 800143e:	d507      	bpl.n	8001450 <__smakebuf_r+0x1c>
 8001440:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8001444:	6023      	str	r3, [r4, #0]
 8001446:	6123      	str	r3, [r4, #16]
 8001448:	2301      	movs	r3, #1
 800144a:	6163      	str	r3, [r4, #20]
 800144c:	b002      	add	sp, #8
 800144e:	bd70      	pop	{r4, r5, r6, pc}
 8001450:	ab01      	add	r3, sp, #4
 8001452:	466a      	mov	r2, sp
 8001454:	f7ff ffc8 	bl	80013e8 <__swhatbuf_r>
 8001458:	9900      	ldr	r1, [sp, #0]
 800145a:	4605      	mov	r5, r0
 800145c:	4630      	mov	r0, r6
 800145e:	f7ff fa57 	bl	8000910 <_malloc_r>
 8001462:	b948      	cbnz	r0, 8001478 <__smakebuf_r+0x44>
 8001464:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001468:	059a      	lsls	r2, r3, #22
 800146a:	d4ef      	bmi.n	800144c <__smakebuf_r+0x18>
 800146c:	f023 0303 	bic.w	r3, r3, #3
 8001470:	f043 0302 	orr.w	r3, r3, #2
 8001474:	81a3      	strh	r3, [r4, #12]
 8001476:	e7e3      	b.n	8001440 <__smakebuf_r+0xc>
 8001478:	4b0d      	ldr	r3, [pc, #52]	; (80014b0 <__smakebuf_r+0x7c>)
 800147a:	62b3      	str	r3, [r6, #40]	; 0x28
 800147c:	89a3      	ldrh	r3, [r4, #12]
 800147e:	6020      	str	r0, [r4, #0]
 8001480:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001484:	81a3      	strh	r3, [r4, #12]
 8001486:	9b00      	ldr	r3, [sp, #0]
 8001488:	6163      	str	r3, [r4, #20]
 800148a:	9b01      	ldr	r3, [sp, #4]
 800148c:	6120      	str	r0, [r4, #16]
 800148e:	b15b      	cbz	r3, 80014a8 <__smakebuf_r+0x74>
 8001490:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001494:	4630      	mov	r0, r6
 8001496:	f000 f889 	bl	80015ac <_isatty_r>
 800149a:	b128      	cbz	r0, 80014a8 <__smakebuf_r+0x74>
 800149c:	89a3      	ldrh	r3, [r4, #12]
 800149e:	f023 0303 	bic.w	r3, r3, #3
 80014a2:	f043 0301 	orr.w	r3, r3, #1
 80014a6:	81a3      	strh	r3, [r4, #12]
 80014a8:	89a0      	ldrh	r0, [r4, #12]
 80014aa:	4305      	orrs	r5, r0
 80014ac:	81a5      	strh	r5, [r4, #12]
 80014ae:	e7cd      	b.n	800144c <__smakebuf_r+0x18>
 80014b0:	08000729 	.word	0x08000729

080014b4 <__malloc_lock>:
 80014b4:	4801      	ldr	r0, [pc, #4]	; (80014bc <__malloc_lock+0x8>)
 80014b6:	f7ff ba09 	b.w	80008cc <__retarget_lock_acquire_recursive>
 80014ba:	bf00      	nop
 80014bc:	20000084 	.word	0x20000084

080014c0 <__malloc_unlock>:
 80014c0:	4801      	ldr	r0, [pc, #4]	; (80014c8 <__malloc_unlock+0x8>)
 80014c2:	f7ff ba04 	b.w	80008ce <__retarget_lock_release_recursive>
 80014c6:	bf00      	nop
 80014c8:	20000084 	.word	0x20000084

080014cc <_free_r>:
 80014cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80014ce:	2900      	cmp	r1, #0
 80014d0:	d044      	beq.n	800155c <_free_r+0x90>
 80014d2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80014d6:	9001      	str	r0, [sp, #4]
 80014d8:	2b00      	cmp	r3, #0
 80014da:	f1a1 0404 	sub.w	r4, r1, #4
 80014de:	bfb8      	it	lt
 80014e0:	18e4      	addlt	r4, r4, r3
 80014e2:	f7ff ffe7 	bl	80014b4 <__malloc_lock>
 80014e6:	4a1e      	ldr	r2, [pc, #120]	; (8001560 <_free_r+0x94>)
 80014e8:	9801      	ldr	r0, [sp, #4]
 80014ea:	6813      	ldr	r3, [r2, #0]
 80014ec:	b933      	cbnz	r3, 80014fc <_free_r+0x30>
 80014ee:	6063      	str	r3, [r4, #4]
 80014f0:	6014      	str	r4, [r2, #0]
 80014f2:	b003      	add	sp, #12
 80014f4:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80014f8:	f7ff bfe2 	b.w	80014c0 <__malloc_unlock>
 80014fc:	42a3      	cmp	r3, r4
 80014fe:	d908      	bls.n	8001512 <_free_r+0x46>
 8001500:	6825      	ldr	r5, [r4, #0]
 8001502:	1961      	adds	r1, r4, r5
 8001504:	428b      	cmp	r3, r1
 8001506:	bf01      	itttt	eq
 8001508:	6819      	ldreq	r1, [r3, #0]
 800150a:	685b      	ldreq	r3, [r3, #4]
 800150c:	1949      	addeq	r1, r1, r5
 800150e:	6021      	streq	r1, [r4, #0]
 8001510:	e7ed      	b.n	80014ee <_free_r+0x22>
 8001512:	461a      	mov	r2, r3
 8001514:	685b      	ldr	r3, [r3, #4]
 8001516:	b10b      	cbz	r3, 800151c <_free_r+0x50>
 8001518:	42a3      	cmp	r3, r4
 800151a:	d9fa      	bls.n	8001512 <_free_r+0x46>
 800151c:	6811      	ldr	r1, [r2, #0]
 800151e:	1855      	adds	r5, r2, r1
 8001520:	42a5      	cmp	r5, r4
 8001522:	d10b      	bne.n	800153c <_free_r+0x70>
 8001524:	6824      	ldr	r4, [r4, #0]
 8001526:	4421      	add	r1, r4
 8001528:	1854      	adds	r4, r2, r1
 800152a:	42a3      	cmp	r3, r4
 800152c:	6011      	str	r1, [r2, #0]
 800152e:	d1e0      	bne.n	80014f2 <_free_r+0x26>
 8001530:	681c      	ldr	r4, [r3, #0]
 8001532:	685b      	ldr	r3, [r3, #4]
 8001534:	6053      	str	r3, [r2, #4]
 8001536:	4421      	add	r1, r4
 8001538:	6011      	str	r1, [r2, #0]
 800153a:	e7da      	b.n	80014f2 <_free_r+0x26>
 800153c:	d902      	bls.n	8001544 <_free_r+0x78>
 800153e:	230c      	movs	r3, #12
 8001540:	6003      	str	r3, [r0, #0]
 8001542:	e7d6      	b.n	80014f2 <_free_r+0x26>
 8001544:	6825      	ldr	r5, [r4, #0]
 8001546:	1961      	adds	r1, r4, r5
 8001548:	428b      	cmp	r3, r1
 800154a:	bf04      	itt	eq
 800154c:	6819      	ldreq	r1, [r3, #0]
 800154e:	685b      	ldreq	r3, [r3, #4]
 8001550:	6063      	str	r3, [r4, #4]
 8001552:	bf04      	itt	eq
 8001554:	1949      	addeq	r1, r1, r5
 8001556:	6021      	streq	r1, [r4, #0]
 8001558:	6054      	str	r4, [r2, #4]
 800155a:	e7ca      	b.n	80014f2 <_free_r+0x26>
 800155c:	b003      	add	sp, #12
 800155e:	bd30      	pop	{r4, r5, pc}
 8001560:	20000088 	.word	0x20000088

08001564 <_read_r>:
 8001564:	b538      	push	{r3, r4, r5, lr}
 8001566:	4d07      	ldr	r5, [pc, #28]	; (8001584 <_read_r+0x20>)
 8001568:	4604      	mov	r4, r0
 800156a:	4608      	mov	r0, r1
 800156c:	4611      	mov	r1, r2
 800156e:	2200      	movs	r2, #0
 8001570:	602a      	str	r2, [r5, #0]
 8001572:	461a      	mov	r2, r3
 8001574:	f7fe febc 	bl	80002f0 <_read>
 8001578:	1c43      	adds	r3, r0, #1
 800157a:	d102      	bne.n	8001582 <_read_r+0x1e>
 800157c:	682b      	ldr	r3, [r5, #0]
 800157e:	b103      	cbz	r3, 8001582 <_read_r+0x1e>
 8001580:	6023      	str	r3, [r4, #0]
 8001582:	bd38      	pop	{r3, r4, r5, pc}
 8001584:	20000090 	.word	0x20000090

08001588 <_fstat_r>:
 8001588:	b538      	push	{r3, r4, r5, lr}
 800158a:	4d07      	ldr	r5, [pc, #28]	; (80015a8 <_fstat_r+0x20>)
 800158c:	2300      	movs	r3, #0
 800158e:	4604      	mov	r4, r0
 8001590:	4608      	mov	r0, r1
 8001592:	4611      	mov	r1, r2
 8001594:	602b      	str	r3, [r5, #0]
 8001596:	f7fe fef0 	bl	800037a <_fstat>
 800159a:	1c43      	adds	r3, r0, #1
 800159c:	d102      	bne.n	80015a4 <_fstat_r+0x1c>
 800159e:	682b      	ldr	r3, [r5, #0]
 80015a0:	b103      	cbz	r3, 80015a4 <_fstat_r+0x1c>
 80015a2:	6023      	str	r3, [r4, #0]
 80015a4:	bd38      	pop	{r3, r4, r5, pc}
 80015a6:	bf00      	nop
 80015a8:	20000090 	.word	0x20000090

080015ac <_isatty_r>:
 80015ac:	b538      	push	{r3, r4, r5, lr}
 80015ae:	4d06      	ldr	r5, [pc, #24]	; (80015c8 <_isatty_r+0x1c>)
 80015b0:	2300      	movs	r3, #0
 80015b2:	4604      	mov	r4, r0
 80015b4:	4608      	mov	r0, r1
 80015b6:	602b      	str	r3, [r5, #0]
 80015b8:	f7fe feef 	bl	800039a <_isatty>
 80015bc:	1c43      	adds	r3, r0, #1
 80015be:	d102      	bne.n	80015c6 <_isatty_r+0x1a>
 80015c0:	682b      	ldr	r3, [r5, #0]
 80015c2:	b103      	cbz	r3, 80015c6 <_isatty_r+0x1a>
 80015c4:	6023      	str	r3, [r4, #0]
 80015c6:	bd38      	pop	{r3, r4, r5, pc}
 80015c8:	20000090 	.word	0x20000090

080015cc <_init>:
 80015cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ce:	bf00      	nop
 80015d0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015d2:	bc08      	pop	{r3}
 80015d4:	469e      	mov	lr, r3
 80015d6:	4770      	bx	lr

080015d8 <_fini>:
 80015d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015da:	bf00      	nop
 80015dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015de:	bc08      	pop	{r3}
 80015e0:	469e      	mov	lr, r3
 80015e2:	4770      	bx	lr
