
4_gpio_input.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000016c  08000198  08000198  00010198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000304  0800030c  0001030c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000304  08000304  0001030c  2**0
                  CONTENTS
  4 .ARM          00000000  08000304  08000304  0001030c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000304  0800030c  0001030c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000304  08000304  00010304  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000308  08000308  00010308  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001030c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800030c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800030c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0001030c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000367  00000000  00000000  0001033c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000000c3  00000000  00000000  000106a3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000048  00000000  00000000  00010768  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000030  00000000  00000000  000107b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000dc36  00000000  00000000  000107e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000050e  00000000  00000000  0001e416  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004fa18  00000000  00000000  0001e924  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0006e33c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000054  00000000  00000000  0006e38c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	; (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	; (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000000 	.word	0x20000000
 80001b4:	00000000 	.word	0x00000000
 80001b8:	080002ec 	.word	0x080002ec

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	; (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	; (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	; (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000004 	.word	0x20000004
 80001d4:	080002ec 	.word	0x080002ec

080001d8 <main>:

#define LED_PIN				PIN5	//Defined pin 5 as led pin
#define BTN_PIN				PIN13	//Defined pin 13 as led pin

int main(void)
{
 80001d8:	b480      	push	{r7}
 80001da:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOAEN;		//Clock is enabled for GPIOA
 80001dc:	4b19      	ldr	r3, [pc, #100]	; (8000244 <main+0x6c>)
 80001de:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001e0:	4a18      	ldr	r2, [pc, #96]	; (8000244 <main+0x6c>)
 80001e2:	f043 0301 	orr.w	r3, r3, #1
 80001e6:	6313      	str	r3, [r2, #48]	; 0x30
	RCC->AHB1ENR |= GPIOCEN;		//Clock is enabled for GPIOC
 80001e8:	4b16      	ldr	r3, [pc, #88]	; (8000244 <main+0x6c>)
 80001ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80001ec:	4a15      	ldr	r2, [pc, #84]	; (8000244 <main+0x6c>)
 80001ee:	f043 0304 	orr.w	r3, r3, #4
 80001f2:	6313      	str	r3, [r2, #48]	; 0x30

	/*To set the gpioa pin 5 as output*/
	GPIOA->MODER |= (1U<<10);
 80001f4:	4b14      	ldr	r3, [pc, #80]	; (8000248 <main+0x70>)
 80001f6:	681b      	ldr	r3, [r3, #0]
 80001f8:	4a13      	ldr	r2, [pc, #76]	; (8000248 <main+0x70>)
 80001fa:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80001fe:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &=~(1U<<11);
 8000200:	4b11      	ldr	r3, [pc, #68]	; (8000248 <main+0x70>)
 8000202:	681b      	ldr	r3, [r3, #0]
 8000204:	4a10      	ldr	r2, [pc, #64]	; (8000248 <main+0x70>)
 8000206:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800020a:	6013      	str	r3, [r2, #0]

	/*To set the gpioc pin 5 as input*/
	GPIOC->MODER &=~(1U<<26);
 800020c:	4b0f      	ldr	r3, [pc, #60]	; (800024c <main+0x74>)
 800020e:	681b      	ldr	r3, [r3, #0]
 8000210:	4a0e      	ldr	r2, [pc, #56]	; (800024c <main+0x74>)
 8000212:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 8000216:	6013      	str	r3, [r2, #0]
	GPIOC->MODER &=~(1U<<27);
 8000218:	4b0c      	ldr	r3, [pc, #48]	; (800024c <main+0x74>)
 800021a:	681b      	ldr	r3, [r3, #0]
 800021c:	4a0b      	ldr	r2, [pc, #44]	; (800024c <main+0x74>)
 800021e:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8000222:	6013      	str	r3, [r2, #0]

	while(1)
	{
		if(GPIOC->IDR & BTN_PIN)
 8000224:	4b09      	ldr	r3, [pc, #36]	; (800024c <main+0x74>)
 8000226:	691b      	ldr	r3, [r3, #16]
 8000228:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800022c:	2b00      	cmp	r3, #0
 800022e:	d003      	beq.n	8000238 <main+0x60>
			GPIOA->BSRR = LED_PIN;
 8000230:	4b05      	ldr	r3, [pc, #20]	; (8000248 <main+0x70>)
 8000232:	2220      	movs	r2, #32
 8000234:	619a      	str	r2, [r3, #24]
 8000236:	e7f5      	b.n	8000224 <main+0x4c>

		else
			GPIOA->BSRR = (1U<<21);
 8000238:	4b03      	ldr	r3, [pc, #12]	; (8000248 <main+0x70>)
 800023a:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
 800023e:	619a      	str	r2, [r3, #24]
		if(GPIOC->IDR & BTN_PIN)
 8000240:	e7f0      	b.n	8000224 <main+0x4c>
 8000242:	bf00      	nop
 8000244:	40023800 	.word	0x40023800
 8000248:	40020000 	.word	0x40020000
 800024c:	40020800 	.word	0x40020800

08000250 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000250:	480d      	ldr	r0, [pc, #52]	; (8000288 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000252:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000254:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000258:	480c      	ldr	r0, [pc, #48]	; (800028c <LoopForever+0x6>)
  ldr r1, =_edata
 800025a:	490d      	ldr	r1, [pc, #52]	; (8000290 <LoopForever+0xa>)
  ldr r2, =_sidata
 800025c:	4a0d      	ldr	r2, [pc, #52]	; (8000294 <LoopForever+0xe>)
  movs r3, #0
 800025e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000260:	e002      	b.n	8000268 <LoopCopyDataInit>

08000262 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000262:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000264:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000266:	3304      	adds	r3, #4

08000268 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000268:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800026c:	d3f9      	bcc.n	8000262 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800026e:	4a0a      	ldr	r2, [pc, #40]	; (8000298 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000270:	4c0a      	ldr	r4, [pc, #40]	; (800029c <LoopForever+0x16>)
  movs r3, #0
 8000272:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000274:	e001      	b.n	800027a <LoopFillZerobss>

08000276 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000276:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000278:	3204      	adds	r2, #4

0800027a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800027c:	d3fb      	bcc.n	8000276 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800027e:	f000 f811 	bl	80002a4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000282:	f7ff ffa9 	bl	80001d8 <main>

08000286 <LoopForever>:

LoopForever:
    b LoopForever
 8000286:	e7fe      	b.n	8000286 <LoopForever>
  ldr   r0, =_estack
 8000288:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800028c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000290:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000294:	0800030c 	.word	0x0800030c
  ldr r2, =_sbss
 8000298:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 800029c:	2000001c 	.word	0x2000001c

080002a0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a0:	e7fe      	b.n	80002a0 <ADC_IRQHandler>
	...

080002a4 <__libc_init_array>:
 80002a4:	b570      	push	{r4, r5, r6, lr}
 80002a6:	4d0d      	ldr	r5, [pc, #52]	; (80002dc <__libc_init_array+0x38>)
 80002a8:	4c0d      	ldr	r4, [pc, #52]	; (80002e0 <__libc_init_array+0x3c>)
 80002aa:	1b64      	subs	r4, r4, r5
 80002ac:	10a4      	asrs	r4, r4, #2
 80002ae:	2600      	movs	r6, #0
 80002b0:	42a6      	cmp	r6, r4
 80002b2:	d109      	bne.n	80002c8 <__libc_init_array+0x24>
 80002b4:	4d0b      	ldr	r5, [pc, #44]	; (80002e4 <__libc_init_array+0x40>)
 80002b6:	4c0c      	ldr	r4, [pc, #48]	; (80002e8 <__libc_init_array+0x44>)
 80002b8:	f000 f818 	bl	80002ec <_init>
 80002bc:	1b64      	subs	r4, r4, r5
 80002be:	10a4      	asrs	r4, r4, #2
 80002c0:	2600      	movs	r6, #0
 80002c2:	42a6      	cmp	r6, r4
 80002c4:	d105      	bne.n	80002d2 <__libc_init_array+0x2e>
 80002c6:	bd70      	pop	{r4, r5, r6, pc}
 80002c8:	f855 3b04 	ldr.w	r3, [r5], #4
 80002cc:	4798      	blx	r3
 80002ce:	3601      	adds	r6, #1
 80002d0:	e7ee      	b.n	80002b0 <__libc_init_array+0xc>
 80002d2:	f855 3b04 	ldr.w	r3, [r5], #4
 80002d6:	4798      	blx	r3
 80002d8:	3601      	adds	r6, #1
 80002da:	e7f2      	b.n	80002c2 <__libc_init_array+0x1e>
 80002dc:	08000304 	.word	0x08000304
 80002e0:	08000304 	.word	0x08000304
 80002e4:	08000304 	.word	0x08000304
 80002e8:	08000308 	.word	0x08000308

080002ec <_init>:
 80002ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002ee:	bf00      	nop
 80002f0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002f2:	bc08      	pop	{r3}
 80002f4:	469e      	mov	lr, r3
 80002f6:	4770      	bx	lr

080002f8 <_fini>:
 80002f8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80002fa:	bf00      	nop
 80002fc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80002fe:	bc08      	pop	{r3}
 8000300:	469e      	mov	lr, r3
 8000302:	4770      	bx	lr
